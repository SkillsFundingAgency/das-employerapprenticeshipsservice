@using SFA.DAS.EAS.Web.ViewModels
@model ExtendedApprenticeshipViewModel


<div class="form-group @(!string.IsNullOrEmpty(Model.Apprenticeship.FirstNameError) ? "error" : "")">
    @Html.Label("FirstName", "First name", new { @class = "form-label form-label-bold" })
    @if (!string.IsNullOrEmpty(Model.Apprenticeship.FirstNameError))
    {
        <span class="error-message" id="error-message-FirstName">@Model.Apprenticeship.FirstNameError</span>
    }
    @Html.TextBox("FirstName", Model.Apprenticeship.FirstName, new { @class = "form-control form-control-3-4" })
</div>

<div class="form-error-group form-group @(!string.IsNullOrEmpty(Model.Apprenticeship.LastNameError) ? "error" : "")">
    @Html.Label("LastName", "Last name", new { @class = "form-label form-label-bold" })
    @if (!string.IsNullOrEmpty(Model.Apprenticeship.LastNameError))
    {
        <span class="error-message" id="error-message-LastName">@Model.Apprenticeship.LastNameError</span>
    }
    @Html.TextBox("LastName", Model.Apprenticeship.LastName, new { @class = "form-control form-control-3-4" })

</div>

<div class="form-error-group form-group @(!string.IsNullOrEmpty(Model.Apprenticeship.DateOfBirthError) ? "error" : "")">
    <hr />
    <span class="form-label-bold">Date of birth</span>
    <span class="form-hint">For example, 08 12 2001</span>

    <div id="DateOfBirth" class="form-date">
        
        @if (!string.IsNullOrEmpty(Model.Apprenticeship.DateOfBirthError))
        {
            <span class="error-message" id="error-message-DateOfBirth">@Model.Apprenticeship.DateOfBirthError</span>
        }

        <div class="form-group form-group-day">
            <label for="DateOfBirth.Day">
                Day
            </label>

            @Html.TextBox("DateOfBirth.Day", Model.Apprenticeship.DateOfBirth.Day, new { @class = "form-control", type = "number", aria_labelledby = "DateOfBirth.Day" })

        </div>
        <div class="form-group form-group-month">
            <label for="DateOfBirth.Month">
                Month
            </label>

            @Html.TextBox("DateOfBirth.Month", Model.Apprenticeship.DateOfBirth.Month, new { @class = "form-control", type = "number", aria_labelledby = "DateOfBirth.Month" })

        </div>
        <div class="form-group form-group-year">
            <label for="DateOfBirth.Year">
                Year
            </label>

            @Html.TextBox("DateOfBirth.Year", Model.Apprenticeship.DateOfBirth.Year, new { @class = "form-control", type = "number", aria_labelledby = "DateOfBirth.Year" })
        </div>
    </div>
</div>

<div class="form-group @(!string.IsNullOrEmpty(Model.Apprenticeship.TrainingCodeError) ? "error" : "")">
    <hr />
    <label class="form-label-bold" for="TrainingCode">Apprenticeship training course</label>
    <span class="form-hint">Start typing in the name of the course or choose an option from the list</span>
    @if (!string.IsNullOrEmpty(Model.Apprenticeship.TrainingCodeError))
    {
        <span class="error-message" id="error-message-TrainingCode">Choose a training course for this apprentice</span>
    }
    <select name="TrainingCode" id="TrainingCode" class="form-control form-control-3-4" aria-label="Apprenticeship training course">
        <option value="">Please select</option>
        @foreach (var apprenticeshipProduct in Model.ApprenticeshipProgrammes)
        {
            <option value="@apprenticeshipProduct.Id" @if (apprenticeshipProduct.Id == Model.Apprenticeship.TrainingCode) { @Html.Raw("selected")   }>
                @apprenticeshipProduct.Title
            </option>
        }
    </select>

</div>

<div class="form-error-group form-group @(!string.IsNullOrEmpty(Model.Apprenticeship.StartDateError) || !string.IsNullOrEmpty(Model.Apprenticeship.StartDateOverlapError) ? "error" : "")">
    <hr />

    <span class="form-label-bold">Planned training start date</span>
    <span class="form-hint">For example, 09 2017</span>

    <div id="StartDate" class="form-date">

        @if (!string.IsNullOrEmpty(Model.Apprenticeship.StartDateError))
        {
            <span class="error-message" id="error-message-StartDate">@Model.Apprenticeship.StartDateError</span>
        }
        @if (!string.IsNullOrEmpty(Model.Apprenticeship.StartDateOverlapError))
        {
            <span class="error-message" id="error-message-StartDate">The date overlaps with existing training dates for the same apprentice. Please check the date - contact your training provider for help.</span>
        }
       
        <div class="form-group form-group-month">
            <label for="StartDate.Month">
                Month
            </label>

            @Html.TextBox("StartDate.Month", Model.Apprenticeship.StartDate.Month, new {@class = "form-control", type = "number", aria_labelledby = "StartDate.Month"})

        </div>
        <div class="form-group form-group-month">
            <label for="StartDate.Year">
                Year
            </label>
            @Html.TextBox("StartDate.Year", Model.Apprenticeship.StartDate.Year, new {@class = "form-control", type = "number", aria_labelledby = "StartDate.Year"})
        </div>
    </div>

</div>

<div class="form-error-group form-group @(!string.IsNullOrEmpty(Model.Apprenticeship.EndDateError) || !string.IsNullOrEmpty(Model.Apprenticeship.EndDateOverlapError) ? "error" : "")">

    <span class="form-label-bold">Planned training finish date</span>
    <span class="form-hint">For example, 02 2019</span>

    <div id="EndDate" class="form-date">
        @if (!string.IsNullOrEmpty(Model.Apprenticeship.EndDateError))
        {
            <span class="error-message" id="error-message-EndDate">@Model.Apprenticeship.EndDateError</span>
        }
        @if (!string.IsNullOrEmpty(Model.Apprenticeship.EndDateOverlapError))
        {
            <span class="error-message" id="error-message-EndDate">The date overlaps with existing training dates for the same apprentice. Please check the date - contact your training provider for help.</span>
        }
       
        <div class="form-group form-group-month">
            <label for="EndDate.Month">
                Month
            </label>

            @Html.TextBox("EndDate.Month", Model.Apprenticeship.EndDate.Month, new {@class = "form-control", type = "number", aria_labelledby = "EndDate.Month"})

        </div>
        <div class="form-group form-group-month">
            <label for="EndDate.Year">
                Year
            </label>
            @Html.TextBox("EndDate.Year", Model.Apprenticeship.EndDate.Year, new {@class = "form-control", type = "number", aria_labelledby = "EndDate.Year"})
        </div>
    </div>


</div>

<div class="form-error-group form-group @(!string.IsNullOrEmpty(Model.Apprenticeship.CostError) ? "error" : "")">

    <hr />
    <label for="Cost">
        <span class="form-label-bold">Total agreed apprenticeship price (excluding VAT)</span>
        <span class="form-hint">Enter the price, including any end-point assessment costs, in whole pounds.</span>
        <span class="form-hint">For example, for £1,500 enter 1500</span>
        @if (!string.IsNullOrEmpty(Model.Apprenticeship.CostError))
        {
            <span class="error-message" id="error-message-Cost">@Model.Apprenticeship.CostError</span>
        }

    </label>

    <span class="heading-small">£ </span>@Html.TextBox("Cost", Model.Apprenticeship.Cost, new { @class = "form-control form-control-3-4", type = "text", aria_labelledby = "Cost", maxlength = "7" })

</div>

<div class="form-group optional-ref @(!string.IsNullOrEmpty(Model.Apprenticeship.EmployerRefError) ? "error" : "")">
    <hr />
    @Html.Label("EmployerRef", "Reference (optional)", new { @class = "form-label-bold" })
    <span class="form-hint">Add a reference, such as employee number or location - this won't be seen by the training provider</span>
    @if (!string.IsNullOrEmpty(Model.Apprenticeship.EmployerRefError))
    {
        <span class="error-message" id="error-message-EmployerRef">@Model.Apprenticeship.EmployerRefError</span>
    }
    @Html.TextBox("EmployerRef", Model.Apprenticeship.EmployerRef, new { @class = "form-control form-control-3-4" })
    <p id="charCount-noJS">Enter up to a maximum of 20 characters</p>
    <p id="charCount" style="display:none;"><span name="countchars" id="countchars"></span> characters remaining</p>
</div>

