@using SFA.DAS.EAS.Web.ViewModels
@using SFA.DAS.EAS.Web.Extensions

@model ExtendedApprenticeshipViewModel


<div class="form-error-group form-group @Html.AddClassIfPropertyInError("FirstName", "error")">
    @Html.Label("FirstName", "First name", new { @class = "form-label form-label-bold" })
    @Html.ValidationMessage("FirstName", new { id = "error-message-FirstName" })
    @Html.TextBox("FirstName", Model.Apprenticeship.FirstName, new { @class = "form-control form-control-3-4" })
</div>

<div class="form-error-group form-group @Html.AddClassIfPropertyInError("LastName", "error")">
    @Html.Label("LastName", "Last name", new { @class = "form-label form-label-bold" })
    @Html.ValidationMessage("LastName", new { id = "error-message-LastName" })
    @Html.TextBox("LastName", Model.Apprenticeship.LastName, new { @class = "form-control form-control-3-4" })

</div>

<div class="form-error-group form-group @Html.AddClassIfPropertyInError("DateOfBirth", "error")">
    <hr />
    <span class="form-label-bold">Date of birth</span>
    <span class="form-hint">For example, 08 12 2001</span>

    <div class="form-date">
        @Html.ValidationMessage("DateOfBirth", new { id = "error-message-DateOfBirth", @class = "error-message" })
        <div class="form-group form-group-day">
            <label for="DateOfBirth.Day">
                Day
            </label>

            @Html.TextBox("DateOfBirth.Day", Model.Apprenticeship.DateOfBirth.Day, new { @class = "form-control", type = "number", aria_labelledby = "DateOfBirth.Day" })

        </div>
        <div class="form-group form-group-month">
            <label for="DateOfBirth.Month">
                Month
            </label>

            @Html.TextBox("DateOfBirth.Month", Model.Apprenticeship.DateOfBirth.Month, new { @class = "form-control", type = "number", aria_labelledby = "DateOfBirth.Month" })

        </div>
        <div class="form-group form-group-year">
            <label for="DateOfBirth.Year">
                Year
            </label>

            @Html.TextBox("DateOfBirth.Year", Model.Apprenticeship.DateOfBirth.Year, new { @class = "form-control", type = "number", aria_labelledby = "DateOfBirth.Year" })
        </div>
    </div>
</div>

<div class="form-group">
    <hr />
    <label class="form-label-bold" for="TrainingCode">Apprenticeship training course</label>
    <select name="TrainingCode" id="TrainingCode" class="form-control form-control-3-4" aria-label="Apprenticeship training course">
        <option value="">Please select</option>
        @foreach (var apprenticeshipProduct in Model.ApprenticeshipProgrammes)
        {
            <option value="@apprenticeshipProduct.Id" @if (apprenticeshipProduct.Id == Model.Apprenticeship.TrainingCode) { @Html.Raw("selected")   }>
                @apprenticeshipProduct.Title
            </option>
        }
    </select>

</div>

<div class="form-error-group form-group @Html.AddClassIfPropertyInError("StartDate", "error") @Html.AddClassIfPropertyInError("StartDateOverlap", "error")">
    <hr />

    <span class="form-label-bold">Planned training start date</span>
    <span class="form-hint">For example, 09 2017</span>

    <div class="form-date">
        @Html.ValidationMessage("StartDate", new { id = "error-message-StartDate", @class = "error-message" })
        @Html.ValidationMessage("StartDateOverlap",
                                "The date overlaps with existing training dates for the same apprentice. " +
                                "Please check the date - contact your training provider for help.",
                                new { id = "error-message-StartDateOverlap", @class = "error-message" })
        <div class="form-group form-group-month">
            <label for="StartDate.Month">
                Month
            </label>

            @Html.TextBox("StartDate.Month", Model.Apprenticeship.StartDate.Month, new { @class = "form-control", type = "number", aria_labelledby = "StartDate.Month" })

        </div>
        <div class="form-group form-group-month">
            <label for="StartDate.Year">
                Year
            </label>
            @Html.TextBox("StartDate.Year", Model.Apprenticeship.StartDate.Year, new { @class = "form-control", type = "number", aria_labelledby = "StartDate.Year" })
        </div>
    </div>

</div>

<div class="form-error-group form-group @Html.AddClassIfPropertyInError("EndDate", "error") @Html.AddClassIfPropertyInError("EndDateOverlap", "error")">

    <span class="form-label-bold">Planned training finish date</span>
    <span class="form-hint">For example, 02 2019</span>

    <div class="form-date">
        @Html.ValidationMessage("EndDate", new { id = "error-message-EndDate", @class = "error-message" })
        @Html.ValidationMessage("EndDateOverlap",
                                "The date overlaps with existing training dates for the same apprentice. " +
                                "Please check the date - contact your training provider for help.",
                                new { id = "error-message-EndDateOverlap", @class = "error-message" })
        <div class="form-group form-group-month">
            <label for="EndDate.Month">
                Month
            </label>

            @Html.TextBox("EndDate.Month", Model.Apprenticeship.EndDate.Month, new { @class = "form-control", type = "number", aria_labelledby = "EndDate.Month" })

        </div>
        <div class="form-group form-group-month">
            <label for="EndDate.Year">
                Year
            </label>
            @Html.TextBox("EndDate.Year", Model.Apprenticeship.EndDate.Year, new { @class = "form-control", type = "number", aria_labelledby = "EndDate.Year" })
        </div>
    </div>


</div>

<div class="form-error-group form-group @Html.AddClassIfPropertyInError("Cost", "error")">

    <hr />
    <label for="Cost">
        <span class="form-label-bold">Total agreed training cost (excluding VAT)</span>
        <span class="form-hint">For example, for £1,500 enter 1500</span>
        @Html.ValidationMessage("Cost", "Enter the cost in whole pounds", new { id = "error-message-Cost", @class = "error-message" })
    </label>

    <span class="heading-small">£ </span>@Html.TextBox("Cost", Model.Apprenticeship.Cost, new { @class = "form-control form-control-3-4", type = "text", aria_labelledby = "Cost" })

</div>

<div class="form-group @Html.AddClassIfPropertyInError("EmployerRef", "error")">
    <hr />
    @Html.Label("EmployerRef", "Reference (optional)", new { @class = "form-label-bold" })
    <span class="form-hint">Add a reference, such as employee number or location - this can help identify this apprentice if you have more than one with the same name.</span>
    @Html.ValidationMessage("EmployerRef", new { id = "error-message-EmployerRef" })
    @Html.TextBox("EmployerRef", Model.Apprenticeship.EmployerRef, new { @class = "form-control form-control-3-4" })
</div>

