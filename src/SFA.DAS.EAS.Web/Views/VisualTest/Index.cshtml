@using SFA.DAS.EAS.Web.Orchestrators
@using SFA.DAS.EAS.Domain 

@helper DisplayPage(string pagePath, string caption, object model = null) {
        <div class="special">
            <h2 class="special">@caption</h2>
            @Html.Partial(pagePath, model)            
        </div>
}
<ul>
    @foreach (var file in (List<string>)ViewData["Views"])
    {
        <li>@file</li>
    }
</ul>

@{ Func<string, object, object> viewToObject = (x, y) => {
        object outval;
        var dict = (Dictionary<string, object>)ViewData["ViewToModel"];
        if (dict.TryGetValue(x, out outval))
        {
            return outval;
        }
        return y;
    };  
}
@foreach (var view in (List<string>)ViewData["Views"])
{
    <div class="special">
        <h2 class="special">@view</h2>
        @try
        {
            @Html.Partial(view, viewToObject(view, null))
        }
        catch  (Exception e)
        {
            @e.Message

            @e.StackTrace
        }
    </div>
}




<style>
    h2.special {
        color: red;
        margin: 30px 0;
        font-weight: bold;
        font-family: 'Comic Sans MS';
    }
</style>
