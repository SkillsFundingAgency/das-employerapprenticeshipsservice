@using SFA.DAS.EAS.Web.Extensions
@model SFA.DAS.EAS.Web.OrchestratorResponse<SFA.DAS.EAS.Web.ViewModels.ManageApprenticeships.UpdateApprenticeshipViewModel>

@{
    ViewBag.Title = "View changes";
    ViewBag.PageID = "view-changes";
}

<div class="grid-row">
    <div class="column-two-thirds">
        <form method="POST" action="@Url.Action("ViewChanges")" novalidate="novalidate">
            @Html.Partial("ValidationSummary", Html.ViewData.ModelState)
            @Html.AntiForgeryToken()

            <h1 class="heading-xlarge">View changes</h1>

            <table class="edited-changes">
                <thead>
                    <tr>
                        <th></th>
                        <th>Previous</th>
                        <th>Changed to</th>

                    </tr>
                </thead>
                <tbody>
                    @if (!string.IsNullOrEmpty(Model.Data.FirstName))
                    {
                        <tr>
                            <td>First name</td>
                            <td>@Model.Data.OriginalApprenticeship.FirstName </td>
                            <td class="changed-item">@Model.Data.FirstName</td>
                            @Html.Hidden("FirstName", Model.Data.FirstName)
                        </tr>
                    }
                    @if (!string.IsNullOrEmpty(Model.Data.LastName))
                    {
                        <tr>
                            <td>Last name</td>
                            <td>@Model.Data.OriginalApprenticeship.LastName </td>
                            <td class="changed-item">@Model.Data.LastName</td>
                            @Html.Hidden("LastName", Model.Data.LastName)
                        </tr>
                    }

                    @if (Model.Data.DateOfBirth?.DateTime != null)
                    {
                        <tr>
                            <td>Date of birth</td>
                            <td>@Model.Data.OriginalApprenticeship.DateOfBirth.Value.ToGdsFormat() </td>
                            <td class="changed-item">@Model.Data.DateOfBirth.DateTime.Value.ToGdsFormat()</td>
                            @Html.Hidden("DateOfBirth.Day", Model.Data.DateOfBirth.Day)
                            @Html.Hidden("DateOfBirth.Month", Model.Data.DateOfBirth.Month)
                            @Html.Hidden("DateOfBirth.Year", Model.Data.DateOfBirth.Year)
                        </tr>
                    }

                    @if (Model.Data.TrainingName != null)
                    {
                        <tr>
                            <td>Apprenticeship training course</td>
                            <td>@Model.Data.OriginalApprenticeship.TrainingName </td>
                            <td class="changed-item">@Model.Data.TrainingName</td>
                            @Html.Hidden("TrainingCode", Model.Data.TrainingCode)
                        </tr>
                    }

                    @if (Model.Data.StartDate?.DateTime != null)
                    {
                        <tr>
                            <td>Planned training start date</td>
                            <td>@Model.Data.OriginalApprenticeship.StartDate.Value.ToGdsFormat() </td>
                            <td class="changed-item">@Model.Data.StartDate.DateTime.Value.ToGdsFormat()</td>
                            @Html.Hidden("StartDate.Month", Model.Data.StartDate.Month)
                            @Html.Hidden("StartDate.Year", Model.Data.StartDate.Year)
                        </tr>
                    }

                    @if (Model.Data.EndDate?.DateTime != null)
                    {
                        <tr>
                            <td>Planned training end date</td>
                            <td>@Model.Data.OriginalApprenticeship.EndDate.Value.ToGdsFormat() </td>
                            <td class="changed-item">@Model.Data.EndDate.DateTime.Value.ToGdsFormat()</td>
                            @Html.Hidden("EndDate.Month", Model.Data.EndDate.Month)
                            @Html.Hidden("EndDate.Year", Model.Data.EndDate.Year)
                        </tr>
                    }

                    @if (Model.Data.Cost != null)
                    {
                        <tr>
                            <td>Cost</td>
                            <td>@Model.Data.OriginalApprenticeship.Cost.FormatCost() </td>
                            <td class="changed-item">@Model.Data.Cost.FormatCost() </td>
                            @Html.Hidden("Cost", Model.Data.Cost)
                        </tr>
                    }

                    @if (Model.Data.EmployerRef != null)
                    {
                        <tr>
                            <td>Reference</td>
                            <td>@Model.Data.OriginalApprenticeship.EmployerRef</td>
                            <td class="changed-item">@Model.Data.EmployerRef</td>
                            @Html.Hidden("EmployerRef", Model.Data.EmployerRef)
                        </tr>
                    }
                </tbody>
            </table>

            <h1 class="heading-medium">Do you want to undo these changes?</h1>
            <div class="form-group">
                <fieldset>
                    <legend class="visually-hidden">Do you want to undo these changes?</legend>

                    <label class="block-label selection-button-radio" for="changes-undo-true">
                        @Html.RadioButton("UndoChanges", true, new { id = "changes-undo-true" })
                        Yes, undo these changes
                    </label>
                    <label class="block-label selection-button-radio" for="changes-undo-false">
                        @Html.RadioButton("UndoChanges", false, new { id = "changes-undo-false" })
                        No, keep these changes
                    </label>
                </fieldset>
            </div>

            @Html.Hidden("OriginalApprenticeshipDecoded", @Json.Encode(Model.Data.OriginalApprenticeship))
            <button type="submit" class="button" aria-label="Continue">Continue</button>
        </form>


        <div class="column-one-thirds">

        </div>

    </div>
</div>


@section breadcrumb {
    <div class="breadcrumbs">
        <a href="@Url.Action("Details", "EmployerManageApprentices", new { Model.Data.HashedAccountId, Model.Data.HashedApprenticeshipId} )" aria-label="Back to apprentice details" class="back-link">Back</a>
    </div>
}