@using SFA.DAS.EAS.Web.Extensions
@using SFA.DAS.EAS.Web.ViewModels.ManageApprenticeships

@model SFA.DAS.EAS.Web.OrchestratorResponse<ApprenticeshipDetailsViewModel>

@{
    ViewBag.Title = "Apprentice detail";
    ViewBag.PageId = "apprentices-detail";
}
<div class="grid-row">
    <div class="column-two-thirds">
       <h1 class="heading-xlarge">@Model.Data.FirstName @Model.Data.LastName</h1>

            @if (Model.Data.PendingChanges == PendingChanges.ReadyForApproval)
            {
                <div class="panel panel-border-wide alert-default">
                    <h3 class="heading-small">Changes for review</h3>
                    <p>
                        There are changes to this apprentice's details that you need to review.
                    </p>
                    <p>
                        <a href="@Url.RouteUrl("ReviewChanges")">Review changes</a>
                    </p>
                </div>
            }
            else if (Model.Data.PendingChanges == PendingChanges.WaitingForApproval)
            {
                <div class="panel panel-border-wide">
                    <h3 class="heading-small">Changes pending</h3>
                    <p>
                        There are changes to this apprentice's details that are waiting for approval by the training provider.
                        <p>
                            <a href="@Url.RouteUrl("ViewChanges", "EmployerManageApprentices")">View changes</a>
                        </p>
                    </p>
                </div>
            }


            @if (Model.Data.PendingDataLockRestart)
            {
                <div class="panel panel-border-wide">
                    <h3 class="heading-small">
                        Changes requested
                    </h3>
                    <p>
                        The apprentice's training provider has asked you to stop this apprentice
                        and then add them to a new cohort using updated training details.
                    </p>
                        <a href="@Url.RouteUrl("RequestRestart")" aria-label="View details" class="">View details</a>
                </div>
            }
            @if (Model.Data.PendingDataLockChange)
            {
                <div class="panel panel-border-wide">
                    <h3>
                        Changes for review
                    </h3>
                    <p>
                        There are changes to this apprentice's details that you need to review.
                    </p>
                    <a href="@Url.RouteUrl("RequestChanges")" aria-label="View details" class="">Review changes</a>
                </div>
            }

            <h2 class="heading-medium visually-hidden">Apprentice status</h2>
            <table id="app-status" class="details-list">
                <tbody>
                    <tr>
                        <th scope="row">Status</th>
                        <td>@Model.Data.Status</td>
                        <td>
                            @if (Model.Data.CanEditStatus)
                            {
                                @Html.RouteLink("Edit status", "ChangeStatusSelectOption");
                            }
                        </td>
                    </tr>
                </tbody>
            </table>

            <h2 class="heading-medium">Overview</h2>
            <table class="details-list">
                <tbody>
                    <tr>
                        <th scope="row">Training provider</th>
                        <td>@Model.Data.ProviderName</td>
                    </tr>
                    <tr>
                        <th scope="row">Cohort reference</th>
                        <td>@Model.Data.CohortReference</td>
                    </tr>
                </tbody>
            </table>

        <h2 class="heading-medium">
            Apprentice
            @if (Model.Data.EnableEdit)
            {
                <a href="@Url.RouteUrl("EditApprenticeship")" class="float-right">Edit</a>
            }
        </h2>
            <table class="details-list">
                <tbody>
                    <tr>
                        <th scope="row">Name</th>
                        <td>@Model.Data.FirstName @Model.Data.LastName</td>
                    </tr>
                    <tr>
                        <th scope="row">Date of birth</th>
                        <td>
                            @if (Model.Data.DateOfBirth.HasValue)
                            {
                                @Model.Data.DateOfBirth.Value.ToGdsFormat()
                            }
                        </td>
                    </tr>
                    <tr>
                        <th scope="row">Apprenticeship training course </th>
                        <td>@Model.Data.TrainingName </td>
                    </tr>
                    @*<tr>
                        <th>End-point assessor </th>
                        <td>@Model.Data.EndPointAssessor</td>
                    </tr>*@
                    <tr>
                        <th scope="row">Training start date </th>
                        <td>
                            @if (@Model.Data.StartDate.HasValue)
                            {
                                @Model.Data.StartDate.Value.ToGdsFormat()
                            }
                        </td>
                    </tr>
                    <tr>
                        <th scope="row">Training end date </th>
                        <td>
                            @if (Model.Data.EndDate.HasValue)
                            {
                                @Model.Data.EndDate.Value.ToGdsFormat()
                            }
                        </td>
                    </tr>
                    <tr>
                        <th scope="row">Total cost of training </th>
                        <td>@FormatCost(Model.Data.Cost) </td>
                    </tr>
                    <tr>
                        <th scope="row">Reference </th>
                        <td>@Model.Data.EmployerReference</td>
                    </tr>
                </tbody>
            </table>
    
        </div>
</div>

@section breadcrumb {
    <div class="breadcrumbs">
        <a href="@Url.Action("ListAll", "EmployerManageApprentices")" aria-label="Back to manage your apprentices" class="back-link">Back to manage your apprentices</a>
    </div>
}

@functions {
    public string FormatCost(decimal? cost)
    {
        if (!cost.HasValue)
            return string.Empty;

        return $"£{cost.Value:n0}";
    }
}