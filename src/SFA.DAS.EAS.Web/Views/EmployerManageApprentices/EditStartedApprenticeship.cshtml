@using SFA.DAS.EAS.Web.ViewModels
@using SFA.DAS.EAS.Web.Extensions

@model ExtendedApprenticeshipViewModel

<div id="edit-started-apprentice">
    <div class="form-error-group form-group @(!string.IsNullOrEmpty(Model.Apprenticeship.FirstNameError) ? "error" : "")">
        @Html.Label("FirstName", "First name", new { @class = "form-label form-label-bold" })
        @if (!string.IsNullOrEmpty(Model.Apprenticeship.FirstNameError))
        {
            <span class="error-message" id="error-message-firstname">@Model.Apprenticeship.FirstNameError</span>
        }
        @Html.TextBox("FirstName", Model.Apprenticeship.FirstName, new { @class = "form-control form-control-3-4" })
    </div>

    <div class="form-error-group form-group @(!string.IsNullOrEmpty(Model.Apprenticeship.LastNameError) ? "error" : "")">
        @Html.Label("LastName", "Last name", new { @class = "form-label form-label-bold" })
        @if (!string.IsNullOrEmpty(Model.Apprenticeship.LastNameError))
        {
            <span class="error-message" id="error-message-lastname">@Model.Apprenticeship.LastNameError</span>
        }
        @Html.TextBox("LastName", Model.Apprenticeship.LastName, new { @class = "form-control form-control-3-4" })
    </div>

    <div class="form-error-group form-group @(!string.IsNullOrEmpty(Model.Apprenticeship.DateOfBirthError) ? "error" : "")">
        <hr />
        <span class="form-label-bold">Date of birth</span>
        <span class="form-hint">For example, 08 12 2001</span>

        <div class="form-date">

            @if (!string.IsNullOrEmpty(Model.Apprenticeship.DateOfBirthError))
            {
                <span class="error-message" id="error-message-dateofbirth">@Model.Apprenticeship.DateOfBirthError</span>
            }

            <div class="form-group form-group-day">
                <label for="DateOfBirth.Day">
                    Day
                </label>

                @Html.TextBox("DateOfBirth.Day", Model.Apprenticeship.DateOfBirth.Day, new { @class = "form-control", type = "number", aria_labelledby = "DateOfBirth.Day" })

            </div>
            <div class="form-group form-group-month">
                <label for="DateOfBirth.Month">
                    Month
                </label>

                @Html.TextBox("DateOfBirth.Month", Model.Apprenticeship.DateOfBirth.Month, new { @class = "form-control", type = "number", aria_labelledby = "DateOfBirth.Month" })

            </div>
            <div class="form-group form-group-year">
                <label for="DateOfBirth.Year">
                    Year
                </label>

                @Html.TextBox("DateOfBirth.Year", Model.Apprenticeship.DateOfBirth.Year, new { @class = "form-control", type = "number", aria_labelledby = "DateOfBirth.Year" })
            </div>
        </div>
    </div>

    <div class="form-group">
        <hr />
        <label class="form-label-bold" for="TrainingCode">Apprenticeship training course</label>
        <span>@Model.Apprenticeship.TrainingName</span>
    </div>

    <div class="form-error-group form-group">
        <hr />
        <label class="form-label-bold">Planned training start date</label>
        <span>@Model.Apprenticeship.StartDate.DateTime.Value.ToGdsFormatWithoutDay() </span>
    </div>

    <div class="form-error-group form-group">
        <hr />
        <span class="form-label-bold">Planned training finish date</span>
        <span class="">@Model.Apprenticeship.EndDate.DateTime.Value.ToGdsFormatWithoutDay() </span>
    </div>

    <div class="form-error-group form-group @(!string.IsNullOrEmpty(Model.Apprenticeship.CostError) ? "error" : "")">

        <hr />

        @if (Model.Apprenticeship.IsInFirstCalendarMonthOfTraining)
        {
            <label for="Cost">
                <span class="form-label-bold">Total agreed apprenticeship price (excluding VAT)</span>
                <span class="form-hint">Enter the price, including any end-point assessment costs, in whole pounds.</span>
                <span class="form-hint">For example, for £1,500 enter 1500</span>
                @if (!string.IsNullOrEmpty(Model.Apprenticeship.CostError))
                    {
                    <span class="error-message" id="error-message-cost">@Model.Apprenticeship.CostError</span>
                }
            </label>
            <span class="heading-small">£ </span>
            @Html.TextBox("Cost", Model.Apprenticeship.Cost, new { @class = "form-control form-control-3-4", type = "text", aria_labelledby = "Cost", maxlength = "7" })
            <div class="approve-alert">
                <div class="panel panel-border-wide alert-blue">
                    You can update the total agreed apprenticeship price until <strong>@Model.Apprenticeship.StartDate.DateTime.Value.GetLastDayOfMonthDate().ToGdsFormat()</strong>
                    - after this date you'll need to ask your training provider to make any changes.
                </div>
            </div>
        }
        else
        {
            <label for="Cost">
                <span class="form-label-bold">Total agreed apprenticeship price (excluding VAT)</span>
            </label>
            <span class="heading-small">£ </span>
            <span>@Model.Apprenticeship.Cost</span>
            @Html.Hidden("Cost", Model.Apprenticeship.Cost)
            <div class="approve-alert">
                <div class="panel panel-border-wide alert-blue">
                    If you want to change the total agreed apprenticeship price, you'll need to ask your training provider to make the changes on your behalf.
                    We'll ask you to approve any changes they make.
                </div>
            </div>
        }

    </div>

    <div class="form-group last-child @(!string.IsNullOrEmpty(Model.Apprenticeship.EmployerRefError) ? "error" : "")">
        <hr />
        @Html.Label("EmployerRef", "Reference (optional)", new { @class = "form-label-bold" })
        <span class="form-hint">Add a reference, such as employee number or location - this won't be seen by the training provider</span>
        @if (!string.IsNullOrEmpty(Model.Apprenticeship.EmployerRefError))
        {
            <span class="error-message" id="error-message-employerref">@Model.Apprenticeship.EmployerRefError</span>
        }
        @Html.TextBox("EmployerRef", Model.Apprenticeship.EmployerRef, new { @class = "form-control form-control-3-4" })
        <p id="charCount-noJS">Enter up to a maximum of 20 characters</p>
        <p id="charCount" style="display:none;"><span name="countchars" id="countchars"></span> characters remaining</p>
    </div>
    </div>

    @Html.Hidden("TrainingCode", Model.Apprenticeship.TrainingCode)
    @Html.Hidden("TrainingType", Model.Apprenticeship.TrainingType)
    @Html.Hidden("TrainingName", Model.Apprenticeship.TrainingName)

    @Html.Hidden("StartDate.Month", Model.Apprenticeship.StartDate.Month)
    @Html.Hidden("StartDate.Year", Model.Apprenticeship.StartDate.Year)

    @Html.Hidden("EndDate.Month", Model.Apprenticeship.EndDate.Month)
    @Html.Hidden("EndDate.Year", Model.Apprenticeship.EndDate.Year)
