@using SFA.DAS.Authorization
@using SFA.DAS.EAS.Domain
@using SFA.DAS.EAS.Domain.Models.UserProfile
@model SFA.DAS.EAS.Web.OrchestratorResponse<SFA.DAS.EAS.Web.ViewModels.UserAccountsViewModel>
@{ViewBag.PageID = "page-auth-homepage"; }
@{ViewBag.Section = "home"; }
@{ViewBag.Title = "Your accounts"; }
@{ViewBag.HideNav = "true"; }

@{
    ViewBag.GaData.Vpv = "/page-auth-homepage";
}

@if (!string.IsNullOrWhiteSpace(Model.Data.ErrorMessage))
{
    <div class="grid-row">
        <div class="column-full">
            <div class="panel panel-error">
                @Model.Data.ErrorMessage
            </div>
        </div>
    </div>
}
<div class="grid-row">
    <div class="column-full">

    @if (Model.Data.Accounts.AccountList.Count == 0)
            {
                @Html.Partial("_SetupAccount")
            }
            else
            {
                <h1 class="heading-xlarge" id="Levy-accounts">Your accounts</h1>
                <p>Select an account or add a new one.</p>
                <table class="responsive">
                    <thead>
                        <tr>
                            <th scope="col" class="tw-30">Account name</th>
                            <th scope="col">What you can do</th>
                            <th scope="col"><span class="vh">Select account</span></th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var account in Model.Data.Accounts.AccountList)
                        {
                            <tr>
                                <td data-label="Account name">
                                    <span class="force-word-wrap">
                                        @account.Name
                                    </span>
                                    <span class="account-id">
                                        Account ID: @account.PublicHashedId
                                    </span>
                                </td>
                                <td data-label="What you can do">
                                    @RoleStrings.GetRoleDescription(account.RoleName)
                                </td>
                                <td class="link-right">
                                    <a aria-label="View account homepage for @account.Name"
                                       title="View account homepage for @account.Name"
                                       href="@Url.Action("Index", "EmployerTeam", new {HashedAccountId = account.HashedId})">
                                        Open<span class="vh"> @account.Name account homepage</span>
                                    </a>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
                <p>
                    <a href="@Url.Action("SearchForOrganisation", "SearchOrganisation")" class="button" id="add_new_account" aria-label="Add new account">Add new account</a>
                </p>
                }


                @if (Model.Data.Accounts.AccountList.Count != 0 && Model.Data.Invitations > 0)
                {

                    <h2 class="heading-medium">Invitations</h2>
                    <p>
                        You have <strong class="bold-small">@Model.Data.Invitations</strong> pending invitation@(Model.Data.Invitations == 1 ? "" : "s") to employer accounts.
                    </p>
                    <p>
                        <a href="@Url.Action("All", "Invitation")" class="link">View Invitations</a>
                    </p>
                }

            </div>
        </div>
