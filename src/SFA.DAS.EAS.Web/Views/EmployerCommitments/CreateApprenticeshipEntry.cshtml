@using SFA.DAS.EAS.Web.Extensions
@model SFA.DAS.EAS.Web.Models.ApprenticeshipViewModel

@*@section pageSpecificJS {
    @Scripts.Render("~/bundles/jqueryvalcustom");    
}*@


<div class="grid-row">
    <div class="column-two-thirds">
        <form method="POST" action="@Url.Action("CreateApprenticeship")">
            @Html.Partial("ValidationSummary", Html.ViewData.ModelState)
            @Html.AntiForgeryToken()

            @*<h1 class="heading-xlarge">Add an apprentice</h1>
            <div class="panel panel-border-wide">
                <p>You can return to this apprentice later to make changes or add more information, if you need to.</p>
                <p> All the fields must be complete and accurate for your training provider to get paid.</p>
            </div>

            <hr />
            <div class="form-error-group form-group @Html.AddClassIfPropertyInError(x => x.FirstName, "error")">
                @Html.LabelFor(m => m.FirstName, "First name", new { @class = "form-label" })
                @Html.ValidationMessageFor(m => m.FirstName, null, new { id = "error-message-" + Html.IdFor(m => m.FirstName) })
                @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control form-control-3-4" })

            </div>
            <div class="form-error-group form-group @Html.AddClassIfPropertyInError(x => x.LastName, "error")">
                @Html.LabelFor(m => m.LastName, "Last name", new { @class = "form-label" })
                @Html.ValidationMessageFor(m => m.LastName, null, new { id = "error-message-" + Html.IdFor(m => m.LastName) })
                @Html.TextBoxFor(m => m.LastName, new { @class = "form-control form-control-3-4" })

            </div>


            <hr />*@
            <div class="form-group">
           
                <h1 class="heading-xlarge">Add an apprentice</h1>
                <div class="panel panel-border-wide">
                    <p>Fill in as many fields as you can. You'll be able to return later to make changes or add more information.</p>
                    <p>                        You'll only be able to approve the release of payments for this apprentice once all the fields have been completed - either by yourself or your training provider.</p>
                </div>

                <hr />
            <fieldset>
                <legend class="visuallyhidden">Add an apprentice</legend>
                <div class="form-error-group form-group @Html.AddClassIfPropertyInError(x => x.FirstName, "error")">
                    @Html.LabelFor(m => m.FirstName, "First name", new { @class = "form-label form-label-bold" })
                    @Html.ValidationMessageFor(m => m.FirstName, null, new { id = "error-message-" + Html.IdFor(m => m.FirstName) })
                    @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control form-control-3-4" })

                </div>
                <div class="form-error-group form-group @Html.AddClassIfPropertyInError(x => x.LastName, "error")">
                    @Html.LabelFor(m => m.LastName, "Last name", new { @class = "form-label form-label-bold" })
                    @Html.ValidationMessageFor(m => m.LastName, null, new { id = "error-message-" + Html.IdFor(m => m.LastName) })
                    @Html.TextBoxFor(m => m.LastName, new { @class = "form-control form-control-3-4" })

                </div>

                <div class="form-group @Html.AddClassIfPropertyInError(x => x.NINumber, "error")">
                    <hr />
                    @Html.LabelFor(m => m.NINumber, "National insurance number", new { @class = "form-label form-label-bold" })
                    @Html.ValidationMessageFor(m => m.NINumber, null, new { id = "error-message-" + Html.IdFor(m => m.NINumber) })
                    @Html.TextBoxFor(m => m.NINumber, new { @class = "form-control form-control-3-4" })
                </div>

                <div class="form-error-group form-group @Html.AddClassIfPropertyInError(x => x.DateOfBirthDay, "error") @Html.AddClassIfPropertyInError(x => x.DateOfBirthMonth, "error") @Html.AddClassIfPropertyInError(x => x.DateOfBirthYear, "error")">
                    <span class="form-label-bold">Date of birth</span>
                    <span class="helpText">For example, 08 12 2001</span>

                    <div class="form-date">
                        @Html.ValidationMessageFor(m => m.DateOfBirthDay, null, new { id = "error-message-" + Html.IdFor(m => m.DateOfBirthDay), @class = "error-message" })
                        @Html.ValidationMessageFor(m => m.DateOfBirthMonth, null, new { id = "error-message-" + Html.IdFor(m => m.DateOfBirthMonth), @class = "error-message" })
                        @Html.ValidationMessageFor(m => m.DateOfBirthYear, null, new { id = "error-message-" + Html.IdFor(m => m.DateOfBirthYear), @class = "error-message" })
                        <div class="form-group form-group-day">
                            <label for="@Html.IdFor(m => m.DateOfBirthDay)">
                                Day
                            </label>
                            @Html.TextBoxFor(m => m.DateOfBirthDay, new { @class = "form-control", type = "number", aria_describedby = "error-message-" + Html.IdFor(m => m.DateOfBirthDay) })
                        </div>
                        <div class="form-group form-group-month">
                            <label for="@Html.IdFor(m => m.DateOfBirthMonth)">
                                Month
                            </label>
                            @Html.TextBoxFor(m => m.DateOfBirthMonth, new { @class = "form-control", type = "number", aria_describedby = "error-message-" + Html.IdFor(m => m.DateOfBirthMonth) })
                        </div>
                        <div class="form-group form-group-year">
                            <label for="@Html.IdFor(m => m.DateOfBirthYear)">
                                Year
                            </label>
                            @Html.TextBoxFor(m => m.DateOfBirthYear, new { @class = "form-control", type = "number", aria_describedby = "error-message-" + Html.IdFor(m => m.DateOfBirthYear) })
                        </div>
                    </div>
                </div>


                <div class="form-group">
                    <label class="form-label-bold" for="TrainingId">Apprenticeship training course</label>
                    <!-- <span class="helpText" aria-label="Search by course name">Search by course name</span> -->
                    <select name="TrainingId" id="TrainingId" class="form-control" aria-label="Training standard">
                        <option value=""></option>
                        @foreach (var standard in ViewBag.ApprenticeshipProducts)
                        {
                            <option value="@standard.Id">@standard.Title</option>
                        }
                    </select>

                </div>

                <div class="form-error-group form-group @Html.AddClassIfPropertyInError(x => x.StartMonth, "error") @Html.AddClassIfPropertyInError(x => x.StartYear, "error")">


                    <span class="form-label-bold">Planned training start date</span>
                    <span class="helpText">For example, 09 2017</span>
                     
                    <div class="form-date">
                        @Html.ValidationMessageFor(m => m.StartMonth, "Please enter a valid month", new { id = "error-message-" + Html.IdFor(m => m.StartMonth), @class = "error-message" })
                        @Html.ValidationMessageFor(m => m.StartYear, "Please enter a valid year", new { id = "error-message-" + Html.IdFor(m => m.StartYear), @class = "error-message" })
                        <div class="form-group form-group-month">
                            <label for="@Html.IdFor(m => m.StartMonth)">
                                Month
                            </label>
                            @Html.TextBoxFor(m => m.StartMonth, new { @class = "form-control", type = "text", aria_describedby = "error-message-" + Html.IdFor(m => m.StartMonth) })
                        </div>
                        <div class="form-group form-group-month">
                            <label for="@Html.IdFor(m => m.StartYear)">
                                Year
                            </label>
                            @Html.TextBoxFor(m => m.StartYear, new { @class = "form-control", type = "text", aria_describedby = "error-message-" + Html.IdFor(m => m.StartYear) })
                        </div>
                    </div>

                </div>

                <div class="form-error-group form-group @Html.AddClassIfPropertyInError(x => x.EndMonth, "error") @Html.AddClassIfPropertyInError(x => x.EndYear, "error")">

                    <legend>
                        <span class="form-label-bold">Planned training finish date</span>
                        <span class="helpText">For example, 02 2019</span>
                    </legend>
                    <div class="form-date">
                        @Html.ValidationMessageFor(m => m.EndMonth, "Please enter a valid month", new { id = "error -message-" + Html.IdFor(m => m.EndMonth), @class = "error-message" })
                        @Html.ValidationMessageFor(m => m.EndYear, "Please enter a valid year", new { id = "error-message-" + Html.IdFor(m => m.EndYear), @class = "error-message" })
                        <div class="form-group form-group-month">
                            <label for="@Html.IdFor(m => m.EndMonth)">
                                Month
                            </label>
                            @Html.TextBoxFor(m => m.EndMonth, new { @class = "form-control", type = "text", aria_describedby = "error-message-" + Html.IdFor(m => m.EndMonth) })
                        </div>
                        <div class="form-group form-group-month">
                            <label for="@Html.IdFor(m => m.EndYear)">
                                Year
                            </label>
                            @Html.TextBoxFor(m => m.EndYear, new { @class = "form-control", type = "text", aria_describedby = "error-message-" + Html.IdFor(m => m.EndYear) })
                        </div>
                    </div>


                </div>

                <div class="form-error-group form-group @Html.AddClassIfPropertyInError(x => x.Cost, "error")">

                    <hr/>
                    <label for="@Html.IdFor(m => m.Cost)">
                        <span class="form-label-bold">Total agreed training cost (excluding VAT)</span>
                        <span class="helpText">For example, for £1,500 enter 1500</span>
                        @Html.ValidationMessageFor(m => m.Cost, null, new { id = "error-message-" + Html.IdFor(m => m.Cost), @class = "error-message" })
                    </label>
                    <span class="heading-small">£ </span>@Html.TextBoxFor(m => m.Cost, new { @class = "form-control form-control-3-4", type = "text", aria_describedby = "error-message-" + Html.IdFor(m => m.Cost) })
                </div>

                <div class="form-group @Html.AddClassIfPropertyInError(x => x.EmployerRef, "error")">
                    @Html.LabelFor(m => m.EmployerRef, "Apprentice employer reference", new { @class = "form-label" })
                    @Html.ValidationMessageFor(m => m.EmployerRef, null, new { id = "error-message-" + Html.IdFor(m => m.EmployerRef) })
                    @Html.TextBoxFor(m => m.EmployerRef, new { @class = "form-control form-control-3-4" })
                </div>

                @Html.HiddenFor(m => m.ULN)
                @Html.HiddenFor(m => m.AgreementStatus)
                @Html.HiddenFor(m => m.ProviderRef)

                <button type="submit" class="button" aria-label="Add">Add</button>
                <a class="links" href="@Url.Action("Details", new { hashedAccountId = Model.HashedAccountId, hashedCommitmentId = Model.HashedCommitmentId })" aria-label="Cancel">Cancel</a>
            </fieldset>
                </div>  
        </form>
    </div>
</div>

@section breadcrumb {
    <div class="breadcrumbs">
        <ol role="navigation">
            <li><a href="/">Your User Profile</a></li>
            <li><a href="@Url.Action("Index", "EmployerTeam", new {accountId = @Model.HashedAccountId})">Employer Account Homepage</a></li>
            <li><a href="@Url.Action("Index", new {hashedAccountId = @Model.HashedAccountId})">Apprenticeships Home</a></li>
            <li><a href="@Url.Action("Details", new {hashedAccountId = @Model.HashedAccountId})">Add apprentices</a></li>
            <li>Add an apprentice</li>
        </ol>
    </div>
}
