@using SFA.DAS.EAS.Web
@using SFA.DAS.EAS.Web.Extensions
@using SFA.DAS.EAS.Web.ViewModels

@{
    ViewBag.Title = "Confirm Delete";
    ViewBag.PageID = "confirm-delete";
}

@model OrchestratorResponse<DeleteApprenticeshipConfirmationViewModel>

<div class="grid-row">
    <div class="column-full">
        
        <form action="@Url.Action("DeleteApprenticeshipConfirmation")" method="POST">
            @Html.AntiForgeryToken()
            @Html.Partial("ValidationSummary", Html.ViewData.ModelState)
            @Html.Hidden("ApprenticeshipName", Model.Data.ApprenticeshipName)
            
            <h1 class="heading-xlarge">Confirm apprentice deletion</h1>
            <h2 class="heading-large">@Model.Data.ApprenticeshipName</h2>

            @if (!string.IsNullOrWhiteSpace(Model.Data.DateOfBirth))
            {
                <p class="secondary-text heading-small">@Model.Data.DateOfBirth</p>
            }
            
            <h2 class="heading-medium">Are you sure you want to delete the record for @Model.Data.ApprenticeshipName?</h2>
            
            <div class="form-error-group form-group @Html.AddClassIfPropertyInError("DeleteConfirmed", "error")">
                <div>
                    @Html.ValidationMessage("DeleteConfirmed", new { id = "error-message-DeleteConfirmed" })
                </div>
                <fieldset>
                    <legend class="visually-hidden">Are you sure you want to delete the record for @Model.Data.ApprenticeshipName?</legend>

                    <label class="block-label selection-button-radio" for="DeleteConfirmed-True">
                        @Html.RadioButton("DeleteConfirmed", "True", Model.Data.DeleteConfirmed.HasValue && Model.Data.DeleteConfirmed.Value, new { Id = "DeleteConfirmed-True" })
                        Yes, delete the record
                    </label>
                    <label class="block-label selection-button-radio" for="DeleteConfirmed-False">
                        @Html.RadioButton("DeleteConfirmed", "False", Model.Data.DeleteConfirmed.HasValue && !Model.Data.DeleteConfirmed.Value, new { Id= "DeleteConfirmed-False"})
                        No, don't delete
                    </label>
                </fieldset>
            </div>
            <button type="submit" class="button">Continue</button>

        </form>

</div>
</div>

@helper GetValueOrDefault(string property)
{
if (!string.IsNullOrEmpty(property))
{
        <span>@property &nbsp;</span>
}
else
{
        <span>@Html.Raw("&ndash;")</span>
}
}

@section breadcrumb {
    <div class="breadcrumbs">
        <a href="@Url.Action("EditApprenticeship", new { Model.Data.HashedAccountId, Model.Data.HashedCommitmentId, Model.Data.HashedApprenticeshipId })" aria-label="Cancel and go back" class="back-link">Cancel and go back</a>
    </div>
}

