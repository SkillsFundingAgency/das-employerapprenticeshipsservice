@using SFA.DAS.EAS.Web
@using SFA.DAS.EAS.Web.Extensions
@model OrchestratorResponse<SFA.DAS.EAS.Web.ViewModels.ExtendedApprenticeshipViewModel>

@{
    ViewBag.Title = "Edit an apprentice";
    ViewBag.PageID = "edit-apprentice";
}

@section pageSpecificJS {
    @*@Scripts.Render("~/bundles/jqueryvalcustom");*@

    @Scripts.Render("~/bundles/apprentice")
}

<div class="grid-row">
    <div class="column-two-thirds">
        <form method="POST" action="@Url.Action("EditApprenticeship")" novalidate="novalidate">
            @Html.AntiForgeryToken()
            @Html.Partial("ValidationSummary", Html.ViewData.ModelState)

            <h1 class="heading-xlarge">Edit an apprentice</h1>
            <div class="panel panel-border-wide">
                <p>
                    You’ll only be able to approve the release of your funds for this apprentice once all the fields have been completed – either by yourself or your training provider.
                </p>
            </div>
 
            <hr />

            <div class="form-group @Html.AddClassIfPropertyInError("FirstName", "error")">
                @Html.Label("FirstName", "First name", new { @class = "form-label form-label-bold" })
                @Html.ValidationMessage("FirstName", new { id = "error-message-FirstName" })
                @Html.TextBox("FirstName", Model.Data.Apprenticeship.FirstName, new { @class = "form-control form-control-3-4" })

            </div>
            <div class="form-group @Html.AddClassIfPropertyInError("LastName", "error")">
                @Html.Label("LastName", "Last name", new { @class = "form-label form-label-bold" })
                @Html.ValidationMessage("LastName", new { id = "error-message-LastName" })
                @Html.TextBox("LastName", Model.Data.Apprenticeship.LastName, new { @class = "form-control form-control-3-4" })

            </div>

            <div class="form-group @Html.AddClassIfPropertyInError("NINumber", "error")">
                <hr />
                @Html.Label("NINumber", "National insurance number", new { @class = "form-label form-label-bold" })
                @Html.ValidationMessage("NINumber", new { id = "error-message-NINumber" })
                @Html.TextBox("NINumber", Model.Data.Apprenticeship.NINumber, new { @class = "form-control form-control-3-4" })
            </div>

            <div class="form-error-group form-group @Html.AddClassIfPropertyInError("DateOfBirth", "error")">
                <hr />
                <span class="form-label-bold">Date of birth</span>
                <span class="form-hint">For example, 08 12 2001</span>

                <div class="form-date">
                    @Html.ValidationMessage("DateOfBirth", new { id = "error-message-DateOfBirth", @class = "error-message" })
                    <div class="form-group form-group-day">
                        <label for="DateOfBirth.Day">
                            Day
                        </label>
                        @Html.TextBox("DateOfBirth.Day", Model.Data.Apprenticeship.DateOfBirth.Day, new { @class = "form-control", type = "number", aria_labelledby = "DateOfBirth.Day" })
                    </div>
                    <div class="form-group form-group-month">
                        <label for="DateOfBirth.Month">
                            Month
                        </label>
                        @Html.TextBox("DateOfBirth.Month", Model.Data.Apprenticeship.DateOfBirth.Month, new { @class = "form-control", type = "number", aria_labelledby = "DateOfBirth.Month" })
                    </div>
                    <div class="form-group form-group-year">
                        <label for="DateOfBirth.Year">
                            Year
                        </label>
                        @Html.TextBox("DateOfBirth.Year", Model.Data.Apprenticeship.DateOfBirth.Year, new { @class = "form-control", type = "number", aria_labelledby = "DateOfBirth.Year" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                <hr />
                <label class="form-label-bold" for="TrainingId">Apprenticeship training course</label>
                <select name="TrainingId" id="TrainingId" class="form-control form-control-3-4 " aria-label="Apprenticeship training course">
                    <option value="">Please select</option>
                    @foreach (var apprenticeshipProduct in Model.Data.ApprenticeshipProgrammes)
                    {
                        <option value="@apprenticeshipProduct.Id" @if (apprenticeshipProduct.Id == Model.Data.Apprenticeship.TrainingId)
                                                     {
                                                         @Html.Raw("selected")
                                                     }>
                            @apprenticeshipProduct.Title
                        </option>
                    }
                </select>

            </div>

            <div class="form-error-group form-group @Html.AddClassIfPropertyInError("StartDate", "error")">
                <hr />
                <fieldset>
                    <legend>
                        <span class="form-label-bold">Planned training start date</span>
                        <span class="form-hint">For example, 09 2017</span>
                    </legend>
                    <div class="form-date">
                            @Html.ValidationMessage("StartDate", new { id = "error-message-StartDate", @class = "error-message" })
                        <div class="form-group form-group-month">
                            <label for="StartDate.Month">
                                <span class="form-label-bold">Month</span>
                            </label>
                            @Html.TextBox("StartDate.Month", Model.Data.Apprenticeship.StartDate.Month, new { @class = "form-control", type = "number", aria_labelledby = "StartDate.Month" })
                        </div>
                        <div class="form-group form-group-month">
                            <label for="StartDate.Year">
                                <span class="form-label-bold">Year</span>
                            </label>
                            @Html.TextBox("StartDate.Year", Model.Data.Apprenticeship.StartDate.Year, new { @class = "form-control", type = "number", aria_labelledby = "StartDate.Year" })
                        </div>
                    </div>
                </fieldset>
            </div>

            <div class="form-error-group form-group @Html.AddClassIfPropertyInError("EndDate", "error")">
                <fieldset>
                    <legend>
                        <span class="form-label-bold">Projected training finish date</span>
                        <span class="form-hint">For example, 02 2019</span>
                    </legend>
                    <div class="form-date">
                        @Html.ValidationMessage("EndDate", new { id = "error-message-EndDate" , @class = "error-message" })
                        <div class="form-group form-group-month">
                            <label for="EndDate.Month">
                                <span class="form-label-bold">Month</span>
                            </label>
                            @Html.TextBox("EndDate.Month", Model.Data.Apprenticeship.EndDate.Month, new { @class = "form-control", type = "number", aria_labelledby = "EndDate.Month" })
                        </div>
                        <div class="form-group form-group-month">
                            <label for="EndDate.Year">
                                <span class="form-label-bold">Year</span>
                            </label>
                            @Html.TextBox("EndDate.Year", Model.Data.Apprenticeship.EndDate.Year, new { @class = "form-control", type = "number", aria_labelledby = "EndDate.Year" })
                        </div>
                    </div>
                </fieldset>

            </div>

            <div class="form-group @Html.AddClassIfPropertyInError("Cost", "error")">
                <hr />
                <label for="Cost">
                    <span class="form-label-bold">Total agreed training cost (excluding VAT)</span>
                    <span class="form-hint">For example, for £1,500 enter 1500</span>
                    @Html.ValidationMessage("Cost", "Enter the cost in whole pounds", new { id = "error-message-Cost", @class = "error-message" })
                </label>
                <span class="heading-small">£ </span>@Html.TextBox("Cost", Model.Data.Apprenticeship.Cost, new { @class = "form-control form-control-3-4", type = "text", aria_labelledby = "Cost" })
            </div>

            <div class="form-group @Html.AddClassIfPropertyInError("EmployerRef", "error")">
                <hr />
                @Html.Label("EmployerRef", "Reference (optional)", new { @class = "form-label-bold" })
                <span class="form-hint">Add a reference, such as employee number or location - this can help identify this apprentice if you have more than one with the same name.</span>
                @Html.ValidationMessage("EmployerRef", new { id = "error-message-EmployerRef" })
                @Html.TextBox("EmployerRef", Model.Data.Apprenticeship.EmployerRef, new { @class = "form-control form-control-3-4" })
            </div>

            @Html.Hidden("ULN", Model.Data.Apprenticeship.ULN)
            @Html.Hidden("AgreementStatus", Model.Data.Apprenticeship.AgreementStatus)
            @Html.Hidden("ProviderRef", Model.Data.Apprenticeship.ProviderRef)

            <button type="submit" class="button">Save</button>
            <a class="button text-link" href="@Url.Action("Details", new { hashedAccountId = Model.Data.Apprenticeship.HashedAccountId, hashedCommitmentId = Model.Data.Apprenticeship.HashedCommitmentId })" aria-label="Cancel">Cancel</a>
        </form>
    </div>
</div>


@section breadcrumb {
    <div class="breadcrumbs">
        <a href="@Url.Action("Index", "EmployerCommitments")" aria-label="Back to Apprentices" class="back-link">Back to Apprentices</a>
    </div>
}