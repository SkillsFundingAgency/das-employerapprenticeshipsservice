@using SFA.DAS.EAS.Web.Models
@using SFA.DAS.EAS.Web.Extensions

@{
    ViewBag.Title = "Cohort";
    ViewBag.PageID = "cohort-details";
}

@model CommitmentDetailsViewModel
    
<div class="grid-row">
    <div class="column-full">
        <h1 class="heading-xlarge">Add apprentices</h1>
    </div>
</div>
  

<div class="grid-row">
    <div class="column-one-half employer-details">
        <p><span class="strong">Training provider:</span> @Model.ProviderName</p>
        <p><span class="strong">Status:</span> @Model.Status.GetDescription()</p>
    </div>

       
    <div class="column-one-half employer-details">
            <p class="strong">Instructions:</p>
            <p>@(string.IsNullOrWhiteSpace(Model.LatestMessage) ? "No note added" : Model.LatestMessage)</p>
    </div>
</div>

<div class="grid-row">
    <div class="column-full">
        <h2 class="heading-medium">@GetApprenticesCountText(Model.Apprenticeships)</h2>
        
        @{
            var finishEditingText = Model.ShowApproveOnlyOption ? "Continue to approval" : "Finish editing";
        }
        <hr />
        <div class="emptyStateButton">
            <a href="@Url.Action("CreateApprenticeshipEntry")" class="button-secondary" aria-label="Add an apprentice">Add an apprentice</a>
            <a class="button finishEditingBtn" href="@Url.Action("FinishedEditing")" aria-label="@finishEditingText">@finishEditingText</a>
        </div>
        <hr />
        @functions {

            public string GetApprenticesCountText(IList<ApprenticeshipListItemViewModel> apprenticeships)
            {
                if (apprenticeships.Count == 1)
                    return "1 Apprentice";

                return $"{apprenticeships.Count} Apprentices";
            }
        }

        @if (Model.Apprenticeships.Count == 0)
        {
            <div id="addApprenticesEmptyState" class="panel panel-filled">
                <p>        You haven't added any apprentices yet. Use the options on this page to add apprentices or finish editing.</p>
            </div>
        }
        else
        {
            
            <table class="tableResponsive viewCommitment">
                <thead>
                <tr>
                    <th scope="col">Apprentice</th>
                    <th scope="col">Training course</th>
                    <th scope="col">Training dates</th>
                    <th scope="col" colspan="2">Cost</th>

                </tr>
                </thead>
                <tbody>
                @foreach (var apprenticeship in Model.Apprenticeships)
                {
                    <tr>
                        <td>
        
                            @apprenticeship.ApprenticeName &nbsp; 
                        </td>
                        <td>
                            @apprenticeship.TrainingName &nbsp;
                        </td>
                        <td>
                            @if (apprenticeship.StartDate != null && apprenticeship.EndDate != null)
                            {
                                <span>
                                    @apprenticeship.StartDate.Value.ToGdsFormatWithoutDay() to @apprenticeship.EndDate.Value.ToGdsFormatWithoutDay()
                                </span>
                            }
                        </td>
                        <td>
                            @FormatCost(apprenticeship.Cost) &nbsp;
                        </td>
                        <td>
                            <a href="@Url.Action("EditApprenticeship", new { hashedApprenticeshipId = apprenticeship.HashedId })" aria-label="Edit @apprenticeship.ApprenticeName">Edit</a>                   
                        </td>
                    </tr>
                }
                </tbody>
            </table>
        }
      
    </div>
</div>

@section breadcrumb {
    <div class="breadcrumbs">
        <ol role="navigation">
            <li><a href="/">Your User Profile</a></li>
            <li><a href="@Url.Action("Index", "EmployerTeam", new {accountId = ViewBag.HashedAccountId })">Employer Account Homepage</a></li>
            <li><a href="@Url.Action("Index", new {accountId = ViewBag.HashedAccountId})">Apprenticeships Home</a></li>
            <li><a href="@Url.Action("Cohorts", new {accountId = ViewBag.HashedAccountId})">Review and approve apprentices</a></li>
            <li>Add apprentices</li>
        </ol>
    </div>
}

@functions
{
    public string FormatCost(decimal? cost)
    {
        if (!cost.HasValue)
            return string.Empty;

        return $"{cost.Value:£0,0}";
    }
}
