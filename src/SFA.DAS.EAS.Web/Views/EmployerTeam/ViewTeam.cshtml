@using SFA.DAS.EAS.Domain
@using SFA.DAS.EAS.Domain.Models.AccountTeam
@using SFA.DAS.EAS.Domain.Models.UserProfile
@using SFA.DAS.EAS.Web

@model OrchestratorResponse<SFA.DAS.EAS.Web.ViewModels.EmployerTeamMembersViewModel>

@{
    ViewBag.PageID = "page-manage-team";
    ViewBag.Title = "Manage team members";
    ViewBag.Section = "team";

    if (TempData.ContainsKey("userAdded"))
    {
        ViewBag.PageID = "page-invite-team-member-sent";
        TempData.Remove("userAdded");
    }

    if (TempData.ContainsKey("userDeleted"))
    {
        ViewBag.PageID = "page-team-member-deleted";
        TempData.Remove("userDeleted");
    }

    if (TempData.ContainsKey("userRoleChange"))
    {
        ViewBag.PageID = "page-team-member-role-changed";
        TempData.Remove("userRoleChange");
    }
}



@if (!string.IsNullOrWhiteSpace(Model.Data.SuccessMessage))
{
    <div class="grid-row">
        <div class="column-full">
            <div class="panel panel-info">
                @Model.Data.SuccessMessage
            </div>
        </div>
    </div>
}
<div class="grid-row header-index">
    <div class="column-two-thirds">
        <h1 class="heading-xlarge">Your team</h1>
        @if (Model.Data.TeamMembers.Count == 0)
        {
            <p>TODO : EMPTY STATE</p>
        }
        else
        {
            <p class="lede">
                Invite members, control what they can do, remove members and cancel or resend invitations.
            </p>
        }
    </div>
    <div class="column-one-third">
        <form action="@Url.Action("Invite")" method="get">
            <input class="button action-add" id="addNewUser" type="submit" value="Invite a new member">
        </form>
    </div>
</div>

@if (Model.Data.TeamMembers.Count > 0)
{
    <div class="grid-row">
        <div class="column-full">
            <table>
                <thead>
                    <tr>
                        <th scope="col">Name</th>
                        <th scope="col">What they can do</th>
                        <th scope="col">Status</th>
                        <th scope="col"><span class="vh">Action</span></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var teamMember in Model.Data.TeamMembers)
                {
                        <tr>
                            <td>
                                <span>@teamMember.Name</span>
                                <span class="responsive-detail mobile-hide">@teamMember.Email</span>
                            </td>
                            <td>@RoleStrings.GetRoleDescription(teamMember.Role)</td>
                            <td>@InvitationStatusStrings.ToString(teamMember.Status)</td>
                            <td class="link-right">
                                <a aria-label="View details for @teamMember.Name"
                                   href="@Url.Action("Review", new { email = teamMember.Email })">View<span class="vh"> details for @teamMember.Name</span></a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
           
        </div>
    </div>
}

        @section breadcrumb {
            <div class="breadcrumbs">
                <ol role="navigation">
                    <li><a href="@Url.Action("Index", "EmployerTeam")">Home</a></li>
                    <li>Your team</li>
                </ol>
            </div>
        }
