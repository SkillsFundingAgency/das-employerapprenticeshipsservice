@using SFA.DAS.EAS.Domain.Models.EmployerAgreement
@using SFA.DAS.EAS.Web;

@model OrchestratorResponse<SFA.DAS.EAS.Web.ViewModels.EmployerAgreementListViewModel>
@{
    ViewBag.PageID = "organisations-agreements-home";
    ViewBag.Title = "Organisations";
    ViewBag.Section = "organisations";

    if (!string.IsNullOrEmpty(Model.FlashMessage?.HiddenFlashMessageInformation))
    {
        ViewBag.PageID = Model.FlashMessage.HiddenFlashMessageInformation;
    }
}

@{
    ViewBag.GaData.Vpv = "/accounts/agreements/organisations-agreements-home";
}

<div class="grid-row header-index">
    <div class="column-two-thirds">
        <h1 class="heading-xlarge">Your organisations and agreements</h1>
    </div>
    <div class="column-one-third">
        <form action="@Url.Action("SearchForOrganisation", "SearchOrganisation")" method="GET">
            <input class="button action-add" id="addNewOrg" type="submit" value="Add new organisation">
        </form>
    </div>
</div>
<div class="grid-row">
    <div class="column-two-thirds">
        <p>Add each organisation that will contract with your training providers.</p>
        <p>There is no restriction on the number of <a href="https://www.gov.uk/government/publications/employment-allowance-more-detailed-guidance" target="_blank" rel="external">connected organisations</a> you can add.</p>
    </div>
</div>
<div class="grid-row">
    <div class="column-full">
        <table class="organisations">
            <thead>
                <tr>
                    <th scope="col">Organisation</th>
                    <th scope="col">Agreement status</th>
                    <th scope="col"><span class="vh">Action</span></th>
                </tr>
            </thead>
            <tbody>

                @foreach (var employerAgreement in Model.Data.EmployerAgreementsData.EmployerAgreements)
                {
                    <tr>
                        <td>@employerAgreement.LegalEntity.Name</td>
                        <td>
                            @if (employerAgreement.HasPendingAgreement)
                            {
                                if (employerAgreement.HasSignedAgreement)
                                {
                                    @: Updated agreement available
                                }
                                else
                                {
                                    @: Agreement not signed
                                }
                            }
                            else
                            {
                                @: Signed by @employerAgreement.Signed.SignedByName
                            }
                        </td>

                        <td class="link-right">
                            @if (employerAgreement.HasPendingAgreement)
                            { 
                                <a href="@Url.Action("AboutYourAgreement", "EmployerAgreement", 
                                             new {agreementid = employerAgreement.Pending.HashedAgreementId})" title="View agreement for @employerAgreement.LegalEntity.Name">Sign agreement</a>
}
                            else
                            {
                                <a href="@Url.Action("Details", "EmployerAgreement", new {agreementid = employerAgreement.Signed.HashedAgreementId})" title="View agreement">View agreement</a>

                            }
                        </td>
                    </tr>
                }
            </tbody>
        </table>
        <p class="font-xsmall"><a href="@Url.Action("GetOrganisationsToRemove", "EmployerAgreement", new { Model.Data.HashedAccountId})">Remove an organisation from your account</a></p>
    </div>
</div>

@section breadcrumb {
    <div class="breadcrumbs">
        <ol role="navigation">
            <li><a href="@Url.Action("Index", "EmployerTeam", new {Model.Data.HashedAccountId})">Home</a></li>
            <li>Your organisations and agreements</li>
        </ol>
    </div>
}
