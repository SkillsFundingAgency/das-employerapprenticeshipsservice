@using SFA.DAS.EmployerApprenticeshipsService.Domain
@model SFA.DAS.EmployerApprenticeshipsService.Web.OrchestratorResponse<SFA.DAS.EmployerApprenticeshipsService.Web.Models.UserAccountsViewModel>


@if (!string.IsNullOrWhiteSpace(Model.Data.ErrorMessage))
{
    <div class="grid-row">
        <div class="column-full">
            <div class="panel panel-error  ">
                @Model.Data.ErrorMessage
            </div>
        </div>
    </div>
}


<div class="grid-row">
    <div class="column-two-thirds">
        <h2 class="heading-medium">Levy accounts</h2>
       
        @if (Model.Data.Accounts.AccountList.Count == 0)
        {

            <p>With levy accounts you can:</p>
            <ul class="list list-bullet">
                <li>view financial information</li>
                <li>create or amend apprenticeships</li>
                <li>spend money</li>
            </ul>
            <p>At the moment, you don't have access to any levy accounts. You need to be invited to an account or add a new one.</p>

        }
        else
        {
            <p>Select an account or add a new one.</p>
            <div class="responsive-table">
                <div class="responsive-thead">
                    <div class="responsive-tr">
                        <div class="responsive-th">Account name</div>
                        <div class="responsive-th">What you can do</div>
                        <div class="responsive-th"> </div>
                    </div>
                </div>
                <div class="responsive-tbody">

                    @foreach (var account in Model.Data.Accounts.AccountList)
                    {
                        <div class="responsive-tr">
                            <div class="responsive-td">
                                <div>@account.Name</div>
                                <div class="responsive-inner-caption">Account name</div>
                            </div>
                            <div class="responsive-td">
                                <div class="responsive-inner-caption">What you can do</div>
                                <div>@RoleStrings.ToWhatTheyCanDo(account.RoleName)
                                </div>
                            </div>
                            <div class="responsive-td">
                                <div>
                                    <a aria-label="View transactions for @account.Name"
                                       title="View transactions for @account.Name"
                                       href="@Url.Action("Index", "EmployerTeam", new {accountId = account.Id})">Open</a>
                                </div>
                                <div class="responsive-inner-caption"></div>
                            </div>
                        </div>

                    }

                </div>
            </div>
        }
        <p></p>
        <a href="@Url.Action("Index", "EmployerAccount")" class="button">Add new account</a>
        <p></p>
    </div>
</div>

<div class="grid-row">
    <div class="column-two-thirds">
        <h4 class="heading-medium">Invitiations</h4>
        @if (Model.Data.Invitations == 0)
        {
            <section class="invites-none">
                <p>You currently have <strong class="bold-small">no</strong> invitations to levy accounts. But you can contact your account admin to request an invitation.</p>
            </section>
        }
        else
        {
            <section class="invites-none">
                <p>
                    You have <strong class="bold-small">@Model.Data.Invitations</strong> pending invitation@(Model.Data.Invitations==1?"":"s") to employer accounts.
                </p>
                <a href="@Url.Action("All", "Invitation")" class="link">View Invitations</a>
            </section>
        }           
    </div>
</div>



