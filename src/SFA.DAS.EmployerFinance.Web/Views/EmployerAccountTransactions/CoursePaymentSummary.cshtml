@using System.Globalization
@using SFA.DAS.EmployerFinance.Web.Extensions
@using SFA.DAS.Common.Domain.Types;
@model CoursePaymentDetailsViewModel

@{
    var culture = new CultureInfo("en-GB");
    ViewBag.PageID = "course-payment-summary";
    ViewBag.Title = "Payment: apprentice details";
    ViewBag.Section = "finance";
    ViewBag.AnalyticsData.Vpv = $"/finance/{ViewBag.PageID}";
}

<div class="grid-row">
    <div class="column-two-thirds">
        <div class="hgroup">
            <h1 class="heading-xlarge">Payment: apprentice details</h1>
            <dl class="inline">
                <dt>Date</dt>
                <dd>@Model.PaymentDate.ToString("dd MMMM yyyy")</dd>
                <dt>Payment to</dt>
                <dd>@Model.ProviderName</dd>
                <dt>Course</dt>
                @{
                    string courseTitle;

                    if (string.IsNullOrEmpty(Model.CourseName))
                    {
                        courseTitle = "(Course details are not available)";
                    }
                    else
                    {
                        courseTitle = $"{Model.CourseName}: {Model.PathwayName}";

                        if (Model.CourseLevel.HasValue)
                        {
                            courseTitle += $" level {Model.CourseLevel.Value}";
                        }
                    }
                }
                <dd>@courseTitle</dd>
            </dl>
        </div>
    </div>
</div>

<div class="grid-row">
    <div class="column-full">
        <table class="responsive">
            <thead>
                <tr>
                    <th colspan="@(Model.ShowNonCoInvesmentPaymentsTotal ? "2" : "1")"></th>
                    <th class="highlight colgroup" scope="colgroup" colspan="2">Co-investment</th>
                    <th colspan="2"></th>
                </tr>
                <tr>
                    <th scope="col" class="tw-20">Apprentice</th>
                    @if (Model.ShowNonCoInvesmentPaymentsTotal)
                    {
                        <th scope="col" class="numeric tw-20">@(Model.ApprenticeshipEmployerType == ApprenticeshipEmployerType.Levy ? "Paid from levy" : "Transferred funds")</th>
                    }
                    <th scope="col" class="numeric tw-20 highlight">Government contribution</th>
                    <th scope="col" class="numeric tw-20 highlight no-wrap">Your contribution</th>
                    <th scope="col" class="numeric tw-20">Amount</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var coursePaymentSummary in Model.ApprenticePayments)
                {
                    <tr class="responsive-tr">
                        @if (string.IsNullOrEmpty(@coursePaymentSummary.ApprenticeName))
                        {
                            <td data-label="Apprentice"><em>Not available</em></td>
                        }
                        else
                        {
                            <td data-label="Apprentice">@coursePaymentSummary.ApprenticeName</td>
                        }

                        @if (Model.ShowNonCoInvesmentPaymentsTotal)
                        {
                            <td class="numeric" data-label="Paid from levy">@coursePaymentSummary.LevyPaymentAmount.ToString("C2", culture)</td>
                        }
                        <td class="numeric highlight" data-label="Government contribution">@coursePaymentSummary.SFACoInvestmentAmount.ToString("C2", culture)</td>
                        <td class="numeric highlight" data-label="Your contribution">@coursePaymentSummary.EmployerCoInvestmentAmount.ToString("C2", culture)</td>
                        <td class="numeric" data-label="Amount">@coursePaymentSummary.TotalAmount.ToString("C2", culture)</td>
                    </tr>
                }
            </tbody>
            <tfoot>
                <tr class="total">
                    <td data-label="Totals"> </td>
                    @if (Model.ShowNonCoInvesmentPaymentsTotal)
                    {
                        <td data-label="Paid from levy" class="total numeric no-wrap">@Model.LevyPaymentsTotal.ToString("C2", culture)</td>
                    }
                    <td data-label="Government contribution" class="highlight total numeric no-wrap">@Model.SFACoInvestmentTotal.ToString("C2", culture)</td>
                    <td data-label="Your contribution" class="highlight total numeric no-wrap">@Model.EmployerCoInvestmentTotal.ToString("C2", culture)</td>
                    <td data-label="Amount" class="total numeric no-wrap">@Model.PaymentsTotal.ToString("C2", culture)</td>
                </tr>
            </tfoot>
        </table>
        <div class="panel">
            <p>It's up to you and your training provider to decide when your contribution is paid.</p>
        </div>

        @if (Model.PaymentDate.Equals(new DateTime(2017, 09, 14)))
        {
            <div class="panel">
                <h3 class="heading-small">Why are there two payments to individual providers this month?</h3>
                <p>
                    The second payment is the result of final adjustments made by the training providers
                    for the academic year ending 31 July 2017. These payments only occur in September and October.
                </p>
            </div>
        }

        @if (Model.PaymentDate.Equals(new DateTime(2017, 11, 2)))
        {
            <div class="panel panel-top-margin">
                <h3 class="heading-small">Note on payments dated 2 November</h3>
                <p>
                    Payments on 2 November are for final costs submitted by training providers for training
                    during the academic year ending July 31 2017. The amount was calculated based on your
                    levy balance on 6 October and does not include the levy payment on 23 October.
                </p>
            </div>
        }
    </div>
</div>




@section breadcrumb {
    <div class="breadcrumbs" id="js-breadcrumbs">
        <ol role="navigation">
            <li><a href="@Url.LegacyEasAccountAction($"accounts/{@Model.HashedAccountId}/teams")">Home</a></li>
            <li><a href="@Url.Action("Index", "EmployerAccountTransactions")">Your transactions</a></li>
            <li>Debit details</li>
        </ol>
    </div>
}
