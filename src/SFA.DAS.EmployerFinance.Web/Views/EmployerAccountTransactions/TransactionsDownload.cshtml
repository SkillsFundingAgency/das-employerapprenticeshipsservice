@using SFA.DAS.EmployerFinance.Formatters.TransactionDowloads
@using SFA.DAS.Validation.Mvc
@model TransactionDownloadViewModel

@{
    ViewBag.PageID = "download-transactions";
    ViewBag.Section = "finance";
    ViewBag.Title = "Download transactions";
    ViewBag.GaData.Vpv = "/accounts/finance/downloadtransactions";
}

@Html.Partial("_ValidationSummary", ViewData.ModelState)
<div class="grid-row">
    <div class="column-two-thirds">
        <h1 class="heading-xlarge">Download transactions</h1>
    </div>
</div>
<div class="grid-row">
    <div class="column-two-thirds">
        <p>Enter a start and end date to download transactions within a specific date range.</p>
    </div>
</div>
<div class="grid-row">
    <div class="column-one-third">
        @using (Html.BeginForm("TransactionsDownload", "EmployerAccountTransactions", FormMethod.Post, new { novalidate = "novalidate" }))
        {
            @Html.AntiForgeryToken()
            <div class="form-group @(Html.IsValid(m => m.GetTransactionsDownloadQuery.StartDate.Month) && Html.IsValid(m => m.GetTransactionsDownloadQuery.StartDate.Year) ? "" : "error")">
                <span id="@Html.IdFor(m => m.GetTransactionsDownloadQuery.StartDate)" class="form-label-bold">Start date</span>
                <span class="form-hint">For example, 5 2017</span>
                <div class="form-date">
                    @Html.ValidationMessageFor(m => m.GetTransactionsDownloadQuery.StartDate.Month)
                    @Html.ValidationMessageFor(m => m.GetTransactionsDownloadQuery.StartDate.Year)
                    <div class="form-group">
                        <label for="@Html.IdFor(m => m.GetTransactionsDownloadQuery.StartDate.Month)">Month</label>
                        @Html.TextBoxFor(m => m.GetTransactionsDownloadQuery.StartDate.Month, new { @class = "form-control length-limit", type = "number", maxlength = "2", min = "1", max = "12", aria_labelledby = $"{Html.IdFor(m => m.GetTransactionsDownloadQuery.StartDate)} {Html.IdFor(m => m.GetTransactionsDownloadQuery.StartDate.Month)}" })
                    </div>
                    <div class="form-group form-group-year">
                        <label for="@Html.IdFor(m => m.GetTransactionsDownloadQuery.StartDate.Year)">Year</label>
                        @Html.TextBoxFor(m => m.GetTransactionsDownloadQuery.StartDate.Year, new { @class = "form-control length-limit", type = "number", maxlength = "4", min = "1900", max = "9999", aria_labelledby = $"{Html.IdFor(m => m.GetTransactionsDownloadQuery.StartDate)} {Html.IdFor(m => m.GetTransactionsDownloadQuery.StartDate.Year)}" })
                    </div>
                </div>
            </div>
            <div class="form-group @(Html.IsValid(m => m.GetTransactionsDownloadQuery.EndDate.Month) && Html.IsValid(m => m.GetTransactionsDownloadQuery.EndDate.Year) ? "" : "error")">
                <span id="@Html.IdFor(m => m.GetTransactionsDownloadQuery.EndDate)" class="form-label-bold">End date</span>
                <span class="form-hint">For example, 10 2017</span>
                <div class="form-date">
                    @Html.ValidationMessageFor(m => m.GetTransactionsDownloadQuery.EndDate.Month)
                    @Html.ValidationMessageFor(m => m.GetTransactionsDownloadQuery.EndDate.Year)
                    <div class="form-group">
                        <label for="@Html.IdFor(m => m.GetTransactionsDownloadQuery.EndDate.Month)">Month</label>
                        @Html.TextBoxFor(m => m.GetTransactionsDownloadQuery.EndDate.Month, new { @class = "form-control length-limit", type = "number", maxlength = "2", min = "1", max = "12", aria_labelledby = $"{Html.IdFor(m => m.GetTransactionsDownloadQuery.EndDate)} {Html.IdFor(m => m.GetTransactionsDownloadQuery.EndDate.Month)}" })
                    </div>
                    <div class="form-group form-group-year">
                        <label for="@Html.IdFor(m => m.GetTransactionsDownloadQuery.EndDate.Year)">Year</label>
                        @Html.TextBoxFor(m => m.GetTransactionsDownloadQuery.EndDate.Year, new { @class = "form-control length-limit", type = "number", maxlength = "4", min = "1900", max = "9999", aria_labelledby = $"{Html.IdFor(m => m.GetTransactionsDownloadQuery.EndDate)} {Html.IdFor(m => m.GetTransactionsDownloadQuery.EndDate.Year)}" })
                    </div>
                </div>
            </div>
            <div class="form-group">
                <label class="form-label" for="@Html.IdFor(m => m.GetTransactionsDownloadQuery.DownloadFormat)">Select format</label>
                @Html.DropDownListFor(m => m.GetTransactionsDownloadQuery.DownloadFormat, EnumHelper.GetSelectList(typeof(DownloadFormatType)), new { @class = "form-control" })
            </div>
            <button class="button" aria-label="Download">Download</button>
        }
    </div>
</div>

@section breadcrumb {
    <div class="breadcrumbs">
        <ol role="navigation">
            <li><a href="@Url.EmployerAccountsAction($"teams")">Home</a></li>
            <li><a href="@Url.Action("Index", "EmployerAccountTransactions")">Finance</a></li>
            <li>@ViewBag.Title</li>
        </ol>
    </div>
}

@section pageSpecificJS {
    <script src="~/dist/javascripts/length-limit.js"></script>
}