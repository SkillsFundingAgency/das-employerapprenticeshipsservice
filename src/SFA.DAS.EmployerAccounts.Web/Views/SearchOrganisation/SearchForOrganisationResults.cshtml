@using SFA.DAS.Common.Domain.Types
@model OrchestratorResponse<SearchOrganisationResultsViewModel>

@{ 
    ViewBag.PageID = "select-your-organisation";
    ViewBag.Title = "Select your organisation";
    ViewBag.HideNav = Model.Data.IsExistingAccount ? "false" : "true";
    ViewBag.Section = "organisations";
}

@{
    ViewBag.GaData.Vpv = Model.Data.IsExistingAccount ? "/accounts/organisations/search/results/select-your-organisation" : "/onboarding/search/results/select-your-organisation";
}


<div class="grid-row">
    <div class="column-two-thirds">
        <h1 class="heading-xlarge">@ViewBag.Title</h1>
        <form action="@Url.Action("SearchForOrganisationResults")" method="POST">
            <div class="search-field">
                <fieldset class="search-input">
                    <label for="searchTerm">
                        <span class="form-label-bold">Search results</span>
                    </label>
                    <input type="text" id="searchTerm" name="searchTerm" value="@Model.Data.SearchTerm" class="form-control" />
                </fieldset>
                <fieldset class="search-submit">
                    <button type="submit" class="button">Search</button>
                </fieldset>
            </div>
        </form>
        <p>@(Model.Data?.Results.TotalResults ?? 0) results found</p>
    </div>
</div>

<div class="grid-row search-results">
    <aside>
        <h2 class="heading-medium">Filter results</h2>
        <form action="@Url.Action("SearchForOrganisationResults")?searchTerm=@(HttpUtility.UrlEncode(Model.Data.SearchTerm))" method="POST">
            <div class="filter">
                <fieldset>
                    <legend class="vh">Filter by organisation type</legend>
                    <h3>Organisation type</h3>
                    <label class="block-label selection-button-radio" for="company">
                        <input id="company" type="radio" name="organisationType" value="CompaniesHouse" @(Model.Data.OrganisationType == OrganisationType.CompaniesHouse ? "checked=\"checked\"" : "") /> Company
                    </label>
                    <label class="block-label selection-button-radio" for="charity">
                        <input id="charity" type="radio" name="organisationType" value="Charities" @(Model.Data.OrganisationType == OrganisationType.Charities ? "checked=\"checked\"" : "") /> Charity
                    </label>
                    <label class="block-label selection-button-radio" for="publicSector">
                        <input id="publicSector" type="radio" name="organisationType" value="PublicBodies" @(Model.Data.OrganisationType == OrganisationType.PublicBodies ? "checked=\"checked\"" : "") /> Public sector
                    </label>
                    <label class="block-label selection-button-radio" for="all">
                        <input id="all" type="radio" name="organisationType" value="" @(Model.Data.OrganisationType == null ? "checked=\"checked\"" : "") /> Show all
                    </label>
                </fieldset>
                <div class="form-group" id="apply-filter">
                    <button type="submit" class="button-secondary">Apply filter</button>
                </div>
            </div>
         
        </form>
    </aside>
    <section class="results-list">
        

            @if (Model.Data.Results.Data != null)
            {
                <ol>
                @foreach (var organisation in Model.Data.Results.Data)
                {
                    if (!organisation.AddedToAccount)
                    {
                        <li>
                            <article>
                                <form action="@Url.Action("Confirm")" method="post">
                                    <input type="hidden" name="DateOfInception" value="@organisation.DateOfInception"/>
                                    <input type="hidden" name="ReferenceNumber" value="@organisation.ReferenceNumber"/>
                                    <input type="hidden" name="Sector" value="@organisation.Sector"/>
                                    <input type="hidden" name="Type" value="@organisation.Type"/>
                                    <input type="hidden" name="Name" value="@organisation.Name"/>
                                    <input type="hidden" name="Address" value="@organisation.Address"/>
                                    <button type="submit" class="heading-medium link-button">@organisation.Name</button>
                                </form>

                                <dl class="inline">
                                    <dt>Address</dt>
                                    <dd>@(string.IsNullOrEmpty(organisation.Address) ? "No address supplied" : organisation.Address)</dd>
                                    <dt>Type</dt>
                                    <dd>@organisation.Type.GetDescription()</dd>
                                </dl>
                            </article>
                        </li>
                    }
                    else
                    {
                        <li class="added">
                            <article>
                                <h1 class="heading-medium">@organisation.Name</h1>
                                <dl class="inline">
                                    <dt>Address</dt>
                                    <dd>@(string.IsNullOrEmpty(organisation.Address) ? "No address supplied" : organisation.Address)</dd>
                                    <dt>Type</dt>
                                    <dd>@organisation.Type.GetDescription()</dd>
                                </dl>
                                <p>Already added - <a href="@Url.Action("Index", "EmployerAgreement")">view my organisations</a>
                                </p>
                            </article>
                        </li>
                    }
                }
                @if (Model.Data.Results.PageNumber == Model.Data.Results.TotalPages || Model.Data.Results.TotalPages == 0)
                {
                    <li class="other">
                        <h2 class="heading-small">Can't find your organisation?</h2>
                        <p>Check the spelling and <a href="#searchTerm">search again</a>.</p>
                        <p>You can also <a href="@Url.Action("AddOtherOrganisationDetails")">enter your details manually.</a></p>
                    </li>
                } 
                </ol>
            }
            else
            {
                
                 <ol>
                     <li>No results found</li>
                     <li class="other">
                         <h2 class="heading-small">Can't find your organisation?</h2>
                         <p>Check the spelling and <a href="#searchTerm">search again</a>.</p>
                         <p>You can also <a href="@Url.Action("AddOtherOrganisationDetails")">enter your details manually.</a></p>
                     </li>
                 </ol>
            }
        <nav>
            <ul class="previous-next-navigation">
                @if (Model.Data.Results.PageNumber > 1)
                {
                    <li class="previous">
                        <a href="@Url.Action("SearchForOrganisationResults", new {searchTerm = Model.Data.SearchTerm, pageNumber = Model.Data.Results.PageNumber - 1, organisationType = Model.Data.OrganisationType })">
                            Previous page
                            <span class="detail">Page @(Model.Data.Results.PageNumber - 1) of @Model.Data.Results.TotalPages</span>
                        </a>
                    </li>
                }
                @if (Model.Data.Results.PageNumber < Model.Data.Results.TotalPages)
                {
                    <li class="next">
                        <a href="@Url.Action("SearchForOrganisationResults", new {searchTerm = Model.Data.SearchTerm, pageNumber = Model.Data.Results.PageNumber + 1, organisationType = Model.Data.OrganisationType })">
                            Next page
                            <span class="detail">Page @(Model.Data.Results.PageNumber + 1) of @Model.Data.Results.TotalPages</span>
                        </a>
                    </li>
                }
            </ul>
        </nav>
    </section>
</div>

@section pageSpecificJS {
    <script>

        $(function () {
            var filter = $('.filter');
            if (filter.length > 0) {
                var radios = filter.find('input:radio'),
                    submit = $('#apply-filter'),
                    filterForm = filter.parent();

                submit.hide();
                radios.on('change', function () {
                    var radioLabel = radios.filter(':checked').parent().text();
                    dataLayer.push({ 
                        'cd1': radioLabel
                    }); 
                    filterForm.submit();
                });
            }
        });

    </script>
}

@section gaDataLayer {
    @if (Model.Data.Results.PageNumber == Model.Data.Results.TotalPages || Model.Data.Results.TotalPages == 0)
    {
        <script>  dataLayer.push({
            'event': 'zerosearch',
            'term' : '@Model.Data.SearchTerm'
  });  </script>
    }   
}


@section breadcrumb {
    <div class="breadcrumbs">
        <ol role="navigation">
            <li><a href="@Url.Action("SearchForOrganisation")" class="back-link">Back</a></li>
        </ol>
    </div>
}
