@using SFA.DAS.Common.Domain.Types
@model OrchestratorResponse<SearchOrganisationResultsViewModel>

@{
    ViewBag.PageID = "select-your-organisation";
    ViewBag.Title = "Select your organisation";
    ViewBag.ShowNav = Model.Data.IsExistingAccount;
    ViewBag.Section = "organisations";
    ViewBag.ZenDeskLabel = "eas-select-your-organisation";

    ViewBag.GaData.Vpv = Model.Data.IsExistingAccount ? "/accounts/organisations/search/results/select-your-organisation" : "/onboarding/search/results/select-your-organisation";

    var hashedAccountId = ViewContext.RouteData.Values[RouteValueKeys.HashedAccountId];
}

<div class="govuk-grid-row">
    <div class="govuk-grid-column-two-thirds">
        <h1 class="govuk-heading-xl">@ViewBag.Title</h1>
        <form 
            asp-controller="@ControllerConstants.SearchOrganisationControllerName" 
            asp-action="@ControllerConstants.SearchForOrganisationResultsActionName" 
            asp-route-hashedAccountId="@hashedAccountId"
            asp-route-organisationType="@Model.Data.OrganisationType"
            method="POST" role="search" aria-label="On this page">
            <div class="govuk-form-group">
                <label for="searchTerm" class="govuk-label">
                    Search results
                </label>
                <div class="das-search-form__group">
                    <input id="searchTerm" name="searchTerm" title="Search" class="govuk-input das-search-form__input" type="text" value="@Model.Data.SearchTerm" />
                    <div class="das-search-form__button-wrap">
                        <button class="govuk-button das-search-form__button" type="submit">Search</button>
                    </div>
                </div>
            </div>
        </form>
    </div>
</div>

<div class="govuk-grid-row">
    <section class="govuk-grid-column-one-third">
        <form id="filter" 
            asp-controller="@ControllerConstants.SearchOrganisationControllerName"
              asp-action="@ControllerConstants.SearchForOrganisationResultsActionName"
              asp-route-hashedAccountId="@hashedAccountId"
              asp-route-searchTerm="@Model.Data.SearchTerm" 
            method="POST">

            <div class="das-filter">
                <div class="das-filter__header">
                    <h2 class="govuk-heading-m das-filter__heading">Filter results</h2>
                </div>
                <div class="das-filter__body">
                    <fieldset class="govuk-fieldset">
                        <legend class="govuk-fieldset__legend  govuk-fieldset__legend--s">
                            <h3 class="govuk-fieldset__heading">
                                <span class="govuk-visually-hidden">Filter by </span>Organisation type
                            </h3>
                        </legend>
                        <div class="govuk-radios govuk-radios--small">
                            <div class="govuk-radios__item">
                                <input class="govuk-radios__input" id="company" name="organisationType" type="radio" value="CompaniesHouse" @(Model.Data.OrganisationType == OrganisationType.CompaniesHouse ? "checked=\"checked\"" : "")>
                                <label class="govuk-label govuk-radios__label" for="company">
                                    Company
                                </label>
                            </div>
                            <div class="govuk-radios__item">
                                <input class="govuk-radios__input" id="charity" name="organisationType" type="radio" value="Charities" @(Model.Data.OrganisationType == OrganisationType.Charities ? "checked=\"checked\"" : "")>
                                <label class="govuk-label govuk-radios__label" for="charity">
                                    Charity
                                </label>
                            </div>
                            <div class="govuk-radios__item">
                                <input class="govuk-radios__input" id="publicSector" name="organisationType" type="radio" value="PublicBodies" @(Model.Data.OrganisationType == OrganisationType.PublicBodies ? "checked=\"checked\"" : "")>
                                <label class="govuk-label govuk-radios__label" for="publicSector">
                                    Public sector
                                </label>
                            </div>
                            <div class="govuk-radios__item">
                                <input class="govuk-radios__input" id="all" name="organisationType" type="radio" value="" @(Model.Data.OrganisationType == null ? "checked=\"checked\"" : "")>
                                <label class="govuk-label govuk-radios__label" for="all">
                                    Show all
                                </label>
                            </div>
                        </div>
                    </fieldset>
                    <div class="govuk-form-group das-js-hide">
                        <button type="submit" class="govuk-button govuk-button--secondary">Apply filter</button>
                    </div>
                </div>
            </div>
        </form>
    </section>

    <section class="govuk-grid-column-two-thirds">
        @if (Model.Data.Results.Data != null)
        {
            <h2 class="govuk-heading-m">@(Model.Data?.Results.TotalResults ?? 0) results found</h2>
            <hr class="govuk-section-break govuk-section-break--visible">
            <div class="das-search-results">
                <ol class="das-search-results__list">
                    @foreach (var organisation in Model.Data.Results.Data)
                    {
                        if (!organisation.AddedToAccount)
                        {
                            <li class="das-search-results__list-item">
                                <form 
                                    asp-action="@ControllerConstants.SearchForOrganisationResultsConfirmActionName"
                                    asp-controller="@ControllerConstants.SearchOrganisationControllerName"
                                    asp-route-hashedAccountId="@hashedAccountId"
                                    method="post">
                                    <input type="hidden" name="DateOfInception" value="@organisation.DateOfInception" />
                                    <input type="hidden" name="ReferenceNumber" value="@organisation.ReferenceNumber" />
                                    <input type="hidden" name="Sector" value="@organisation.Sector" />
                                    <input type="hidden" name="Type" value="@organisation.Type" />
                                    <input type="hidden" name="Name" value="@organisation.Name" />
                                    <input type="hidden" name="Address" value="@organisation.Address" />
                                    <h2 class="govuk-heading-s das-search-results__heading">
                                        <button type="submit" class="das-button--inline-link">@organisation.Name</button>
                                    </h2>
                                </form>
                                <dl class="das-definition-list das-definition-list--inline">
                                    <dt class="das-definition-list__title">Address</dt>
                                    <dd class="das-definition-list__definition">@(string.IsNullOrEmpty(organisation.Address) ? "No address supplied" : organisation.Address)</dd>
                                    <dt class="das-definition-list__title">Type</dt>
                                    <dd class="das-definition-list__definition">@organisation.Type.GetDescription()</dd>
                                </dl>
                            </li>
                        }
                        else
                        {
                            <li class="das-search-results__list-item">
                                <h3 class="govuk-heading-s das-search-results__heading">@organisation.Name</h3>
                                <dl class="das-definition-list das-definition-list--inline">
                                    <dt class="das-definition-list__title">Address</dt>
                                    <dd class="das-definition-list__definition">@(string.IsNullOrEmpty(organisation.Address) ? "No address supplied" : organisation.Address)</dd>
                                    <dt class="das-definition-list__title">Type</dt>
                                    <dd class="das-definition-list__definition">@organisation.Type.GetDescription()</dd>
                                </dl>
                                <p class="govuk-body govuk-!-margin-bottom-0">
                                    Already added - <a asp-route="@RouteNames.EmployerAgreementIndex" asp-route-hashedAccountId="@hashedAccountId" class="govuk-link">view my organisations</a>
                                </p>
                            </li>
                        }
                    }
                    @if (Model.Data.Results.PageNumber == Model.Data.Results.TotalPages || Model.Data.Results.TotalPages == 0)
                    {
                        <li class="das-search-results__list-item">
                            <p class="govuk-heading-s">Can't find your organisation?</p>
                            <p class="govuk-body">Check the spelling and <a href="#searchTerm" class="govuk-link">search again</a>.</p>
                        </li>
                    }
                </ol>
            </div>
        }
        else
        {
            <p class="govuk-heading-s"><strong>No results found.</strong></p>
            <p class="govuk-body">Can't find your organisation?</p>
            <p class="govuk-body">Check the spelling and <a href="#searchTerm" class="govuk-link">search again</a>.</p>
        }

        <hr class="govuk-section-break govuk-section-break--visible">

        <nav class="das-pagination-simple" role="navigation" aria-label="Pagination">
            <ul class="das-pagination-simple__list">
                @if (Model.Data.Results.PageNumber > 1)
                {
                    <li class="das-pagination-simple__list-item das-pagination-simple__list-item--previous">
                        <a href="@Url.Action("SearchForOrganisationResults", new {searchTerm = Model.Data.SearchTerm, pageNumber = Model.Data.Results.PageNumber - 1, organisationType = Model.Data.OrganisationType })" class="das-pagination-simple__link">
                            <span class="das-pagination-simple__link-text">Previous page</span>
                            <span class="das-pagination-simple__link-divider govuk-visually-hidden">: </span>
                            <span class="das-pagination-simple__link-label">Page @(Model.Data.Results.PageNumber - 1) of @Model.Data.Results.TotalPages</span>
                        </a>
                    </li>
                }
                @if (Model.Data.Results.PageNumber < Model.Data.Results.TotalPages)
                {
                    <li class="das-pagination-simple__list-item das-pagination-simple__list-item--next">
                        <a href="@Url.Action("SearchForOrganisationResults", new {searchTerm = Model.Data.SearchTerm, pageNumber = Model.Data.Results.PageNumber + 1, organisationType = Model.Data.OrganisationType })" class="das-pagination-simple__link">
                            <span class="das-pagination-simple__link-text">Next page</span>
                            <span class="das-pagination-simple__link-divider govuk-visually-hidden">: </span>
                            <span class="das-pagination-simple__link-label">Page @(Model.Data.Results.PageNumber + 1) of @Model.Data.Results.TotalPages</span>
                        </a>
                    </li>
                }
            </ul>
        </nav>
    </section>
</div>

@section pageSpecificJS {
    <script>
        $(function () {

            var pageTitle = $('h1.govuk-heading-xl').text().trim();
            var formFilter = $('form#filter');
            var dataLayerObj
            var radios = formFilter.find('input:radio');

            radios.on('change', function () {

                var radioLabel = $(this).siblings('label').text().trim().substring(0, 30)

                dataLayerObj = {
                    event: 'radio button selected',
                    page: pageTitle,
                    radio: radioLabel
                }

                window.dataLayer.push(dataLayerObj)

                // Keep existing DL push
                window.dataLayer.push({
                    'cd1': radioLabel
                });

                // Submit form
                formFilter.submit()
            })

        });
    </script>
}

@section gaDataLayer {
    @if (Model.Data.Results.PageNumber == Model.Data.Results.TotalPages || Model.Data.Results.TotalPages == 0)
    {
        <script>
            dataLayer.push({
                'event': 'zerosearch',
                'term': '@Model.Data.SearchTerm'
            });</script>
    }
}


@section breadcrumb {
    <div class="das-js-back-link"></div>
}
