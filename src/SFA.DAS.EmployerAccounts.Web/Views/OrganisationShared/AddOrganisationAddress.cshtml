@using SFA.DAS.EmployerAccounts.Web.Helpers
@model OrchestratorResponse<AddOrganisationAddressViewModel>
@{ ViewBag.PageID = "page-extra-add-organisation-address"; }
@{
    ViewBag.Title = "Add organisation address";
    ViewBag.Section = "organisations";

    var hasHashedOrganisationId = this.ViewContext.RouteData.Values[ControllerConstants.AccountHashedIdRouteKeyName] != null;
    ViewBag.HideNav = hasHashedOrganisationId == false;
}
@{
    ViewBag.GaData.Vpv = "/onboarding/address/update/page-extra-add-organisation-address";
}
<div class="grid-row">
    <div class="column-two-thirds">
        <h1 class="heading-xlarge">
            Enter your organisation's address
        </h1>
        <p class="lede">Use your organisation's main address, such as your head office.</p>
        <form action="@Url.Action("UpdateOrganisationAddress", "OrganisationShared")" method="POST" novalidate>
            @Html.AntiForgeryToken()
            <div class="form-group @(!string.IsNullOrEmpty(Model.Data.Address.AddressFirstLineError) ? "error" : "")">
                <label for="AddressFirstLine">
                    <span class="form-label-bold">House number or name, building or street</span>
                    @if (!string.IsNullOrEmpty(Model.Data.Address.AddressFirstLineError))
                    {
                        <span class="error-message" id="error-message-address">@Model.Data.Address.AddressFirstLineError</span>
                    }
                </label>
                <input type="text" id="AddressFirstLine" name="Address.addressFirstLine" value="@Model.Data.Address.AddressFirstLine" class="form-control" required="required" aria-required="true"
                       @(!string.IsNullOrEmpty(Model.Data.Address.AddressFirstLineError) ? "aria-invalid=true aria-describedby=error-message-address" : "") />
            </div>
            <div class="form-group">
                <label for="AddressSecondLine">
                    <span class="form-label-bold">Address line 2 (optional)</span>
                </label>
                <input type="text" id="AddressSecondLine" name="Address.addressSecondLine" value="@Model.Data.Address.AddressSecondLine" class="form-control" />
            </div>
            <div class="form-group  @(!string.IsNullOrEmpty(Model.Data.Address.TownOrCityError) ? "error" : "")">
                <label for="TownOrCity">
                    <span class="form-label-bold">Town or city</span>
                    @if (!string.IsNullOrEmpty(Model.Data.Address.TownOrCityError))
                    {
                        <span class="error-message" id="error-message-town">@Model.Data.Address.TownOrCityError</span>
                    }
                </label>
                <input type="text" id="TownOrCity" name="Address.townOrCity" value="@Model.Data.Address.TownOrCity" class="form-control" required="required" aria-required="true"
                       @(!string.IsNullOrEmpty(Model.Data.Address.TownOrCityError) ? "aria-invalid=true aria-describedby=error-message-town" : "") />
            </div>
            <div class="form-group">
                <label for="County">
                    <span class="form-label-bold">County (optional)</span>
                </label>
                <input type="text" id="County" name="Address.county" value="@Model.Data.Address.County" class="form-control" />
            </div>
            <div class="form-group  @(!string.IsNullOrEmpty(Model.Data.Address.PostcodeError) ? "error" : "")">
                <label for="Postcode">
                    <span class="form-label-bold">Postcode</span>
                    @if (!string.IsNullOrEmpty(Model.Data.Address.PostcodeError))
                    {
                        <span class="error-message" id="error-message-postcode">@Model.Data.Address.PostcodeError</span>
                    }
                </label>
                <input type="text" id="Postcode" name="Address.postcode" value="@Model.Data.Address.Postcode" class="form-control" required="required" aria-required="true"
                       @(!string.IsNullOrEmpty(Model.Data.Address.PostcodeError) ? "aria-invalid=true aria-describedby=error-message-postcode" : "") />
            </div>
            <input type="hidden" id="organisationName" name="organisationName" value="@Model.Data.OrganisationName" />
            <input type="hidden" id="OrganisationReferenceNumber" name="OrganisationReferenceNumber" value="@Model.Data.OrganisationReferenceNumber" />
            <input type="hidden" id="OrganisationDateOfInception" name="OrganisationDateOfInception" value="@Model.Data.OrganisationDateOfInception" />
            <input type="hidden" id="OrganisationType" name="OrganisationType" value="@Model.Data.OrganisationType" />
            <input type="hidden" id="PublicSectorDataSource" name="PublicSectorDataSource" value="@Model.Data.PublicSectorDataSource" />
            <input type="hidden" id="Sector" name="Sector" value="@Model.Data.Sector" />
            <input class="button" type="submit" value="Continue" />
        </form>
    </div>
</div>
@section breadcrumb {
    <div class="breadcrumbs" id="js-breadcrumbs">
    </div>
}