@using SFA.DAS.EmployerAccounts.Authorisation
@using SFA.DAS.EmployerAccounts.Web.Helpers
@model OrchestratorResponse<EmployerAgreementListViewModel>

@{
    ViewBag.PageID = "organisations-agreements-home";
    ViewBag.Title = "Organisations";
    ViewBag.Section = "organisations";
    ViewBag.GaData.Vpv = "/accounts/agreements/organisations-agreements-home";
    ViewBag.ZenDeskLabel = "eas-your-organisation-and-agreements";

    if (!string.IsNullOrEmpty(Model.FlashMessage?.HiddenFlashMessageInformation))
    {
        ViewBag.PageID = Model.FlashMessage.HiddenFlashMessageInformation;
    }
}

@{Layout = "~/Views/Shared/_Layout_CDN.cshtml"; }

<div class="govuk-grid-row">
    <div class="govuk-grid-column-two-thirds">
        <h1 class="govuk-heading-xl">Your organisations and agreements</h1>
    </div>
</div>

<div class="govuk-grid-row">
    <div class="govuk-grid-column-two-thirds">
        <p class="govuk-body">Add each organisation that will contract with your training providers.</p>
        <p class="govuk-body">There is no restriction on the number of <a href="https://www.gov.uk/government/publications/employment-allowance-more-detailed-guidance" class="govuk-link" target="_blank" rel="external" title="Opens in a new window">connected organisations</a> you can add.</p>
    </div>
    <div class="govuk-grid-column-one-third">
        <form action="@Url.EmployerAccountsAction("organisations/search")" method="get">
            <input class="govuk-button das-float-right" id="addNewOrg" type="submit" value="Add new organisation">
        </form>
    </div>
</div>

<div class="govuk-grid-row">
    <div class="govuk-grid-column-two-thirds">
        
        <details class="govuk-details">
            <summary class="govuk-details__summary">
                <span class="govuk-details__summary-text">Transfers status: 
                    <span class="govuk-!-font-weight-bold">
                        @{
                            var authorizationResult = Html.GetAuthorizationResult("EmployerFeature.TransferConnectionRequests");
                            if (authorizationResult.IsAuthorized)
                            {
                                @:Enabled
                            }
                            else if (authorizationResult.HasError<EmployerFeatureAgreementNotSigned>())
                            {
                                @:Disabled
                            }
                            else
                            {
                                throw new ArgumentOutOfRangeException();
                            }
                        }
                    </span>
                </span>
            </summary>

            <div class="govuk-details__text">
                <p>You must sign the most up-to-date agreement for all organisations to use transfers functionality.</p>
            </div>
        </details>

    </div>
</div>

<div class="govuk-grid-row govuk-!-margin-bottom-6">
    <div class="govuk-grid-column-full">

        <table class="govuk-table das-table--responsive">
            <caption class="govuk-table__caption govuk-visually-hidden">Table of your organisations and agreements</caption>
            <thead class="govuk-table__head">
                <tr class="govuk-table__row">
                    <th scope="col" class="govuk-table__header">Organisation</th>
                    <th scope="col" class="govuk-table__header">Agreement status</th>
                    <th scope="col" class="govuk-table__header">Action</th>
                    <th scope="col" class="govuk-table__header">Agreement&nbsp;<abbr>ID</abbr></th>
                </tr>
            </thead>
            <tbody class="govuk-table__body">
                @foreach (var employerAgreement in Model.Data.EmployerAgreementsData.EmployerAgreements)
                {
                <tr class="govuk-table__row">
                    <td class="govuk-table__cell" data-label="Organisation">@employerAgreement.LegalEntity.Name</td>
                    <td class="govuk-table__cell" data-label="Agreement status">
                        @if (employerAgreement.HasPendingAgreement)
                        {
                            if (employerAgreement.HasSignedAgreement)
                            {
                                @:Updated agreement available
                            }
                            else
                            {
                                @:Agreement not signed
                            }
                        }
                        else if (employerAgreement.HasSignedAgreement)
                        {
                            @:Signed by @employerAgreement.Signed.SignedByName
                        }
                    </td>
                    <td class="govuk-table__cell" data-label="Action">
                        @if (employerAgreement.HasPendingAgreement)
                        {
                            <a href="@Url.Action(ControllerConstants.AboutYourAgreementActionName, ControllerConstants.EmployerAgreementControllerName, new { agreementid = employerAgreement.Pending.HashedAgreementId })" title="View agreement for @employerAgreement.LegalEntity.Name">Accept agreement</a>
                        }
                        else if (employerAgreement.HasSignedAgreement)
                        {
                            <a href="@Url.Action(ControllerConstants.DetailsActionName, ControllerConstants.EmployerAgreementControllerName, new { agreementid = employerAgreement.Signed.HashedAgreementId })" title="View agreement">View</a>
                        }
                    </td>
                    <td class="govuk-table__cell" data-label="Agreement ID">
                        @if (employerAgreement.HasSignedAgreement)
                        {
                            <span>@employerAgreement.LegalEntity.AccountLegalEntityPublicHashedId</span>
                        }
                        else
                        {
                            <span>Accept agreement to receive an agreement <abbr>ID</abbr></span>
                        }
                    </td>
                </tr>
                }
            </tbody>
        </table>

        @if (Model.Data.EmployerAgreementsData.EmployerAgreements.Any())
        {
        <p class="govuk-body-s">
            <a href="@Url.Action("GetOrganisationsToRemove", "EmployerAgreement", new {Model.Data.HashedAccountId})" class="govuk-link govuk-link--no-visited-state">
            Remove an organisation from your account
            </a>
        </p>
        }
    </div>
</div>

@section breadcrumb {
    <div class="govuk-breadcrumbs">
        <ol class="govuk-breadcrumbs__list" role="navigation">
            <li class="govuk-breadcrumbs__list-item"><a href="@Url.Action("Index", "EmployerTeam", new {Model.Data.HashedAccountId})" class="govuk-breadcrumbs__link">Home</a></li>
            <li class="govuk-breadcrumbs__list-item">Your organisations and agreements</li>
        </ol>
    </div>
}