@using SFA.DAS.EmployerAccounts.Authorisation
@using SFA.DAS.EmployerAccounts.Web.Helpers
@model OrchestratorResponse<EmployerAgreementListViewModel>

@{
    ViewBag.PageID = "organisations-agreements-home";
    ViewBag.Title = "Organisations";
    ViewBag.Section = "organisations";
    ViewBag.GaData.Vpv = "/accounts/agreements/organisations-agreements-home";
    ViewBag.ZenDeskLabel = "eas-your-organisation-and-agreements";

    if (!string.IsNullOrEmpty(Model.FlashMessage?.HiddenFlashMessageInformation))
    {
        ViewBag.PageID = Model.FlashMessage.HiddenFlashMessageInformation;
    }
}

@{Layout = "~/Views/Shared/_Layout_CDN.cshtml"; }

<div class="govuk-grid-row">
    <div class="govuk-grid-column-two-thirds">
        <h1 class="govuk-heading-xl">Your organisations and agreements</h1>
        <p class="govuk-body">You must add each organisation that will contract with your training providers.</p>
        <p class="govuk-body">You can add as many connected organisations as you need to.</p>
        <p class="govuk-body">Transfers status:&nbsp;
            <span>
                @{
                    var authorizationResult = Html.GetAuthorizationResult("EmployerFeature.TransferConnectionRequests");
                    if (authorizationResult.IsAuthorized)
                    {
                        @:enabled.
                    }
                    else if (authorizationResult.HasError<EmployerFeatureAgreementNotSigned>())
                    {
                        @:disabled.
                    }
                    else
                    {
                        throw new ArgumentOutOfRangeException();
                    }
                }
            </span>
        </p>
        <p class="govuk-!-margin-bottom-8">
            <a href="@Url.Action(ControllerConstants.SearchForOrganisationActionName, ControllerConstants.SearchOrganisationControllerName)" class="govuk-button govuk-!-margin-bottom-0">Add an organisation</a>
        </p>
    </div>
</div>
<div class="govuk-grid-row">
    <div class="govuk-grid-column-full">
        <table class="govuk-table govuk-!-font-size- govuk-!-margin-bottom-8">
            <caption class="govuk-table__caption govuk-heading-l govuk-visually-hidden">Organisations</caption>
            <thead class="govuk-table__head">
                <tr class="govuk-table__row">
                    <th scope="col" class="govuk-table__header govuk-!-width-one-third">Organisation name</th>
                    <th scope="col" class="govuk-table__header">Latest agreement status</th>
                    <th scope="col" class="govuk-table__header" colspan="2"><span class="govuk-visually-hidden">Actions</span></th>
                </tr>
            </thead>
            <tbody class="govuk-table__body">
            @foreach (var employerAgreement in Model.Data.EmployerAgreementsData.EmployerAgreements)
            {
                <tr class="govuk-table__row">
                    <td class="govuk-table__cell">@employerAgreement.LegalEntity.Name</td>
                    <td class="govuk-table__cell">
                        @if (employerAgreement.HasPendingAgreement)
                        {
                            @:Not yet accepted
                        }
                        else if (employerAgreement.HasSignedAgreement)
                        {
                            @:Accepted
                        }
                    </td>                    
                    <td class="govuk-table__cell">
                        <a href="@Url.Action(ControllerConstants.ViewAllAgreementActionName, ControllerConstants.EmployerAgreementControllerName, new {accountLegalEntityHashedId = employerAgreement.LegalEntity.AccountLegalEntityPublicHashedId})" title="View all agreements">
                            View all agreements
                        </a>
                    </td>
                    <td class="govuk-table__cell">
                        @if (Model.Data.EmployerAgreementsData.EmployerAgreements.Any())
                        {
                            <a href="remove?name=Makingway">Remove organisation</a>
                        }
                    </td>
                </tr>
            }
            </tbody>
        </table>
        <details class="govuk-details" data-module="govuk-details">
            <summary class="govuk-details__summary">
                <span class="govuk-details__summary-text">
                    How transfers status is worked out
                </span>
            </summary>
            <div class="govuk-details__text">
                Transfers are enabled if all the organisations in your account have accepted the latest agreement.
            </div>
        </details>
    </div>
</div>
<div class="govuk-grid-row">
    <div class="govuk-grid-column-full">
        @if (Model.Data.EmployerAgreementsData.EmployerAgreements.Any())
        {
            <p class="font-xsmall"><a href="@Url.Action("GetOrganisationsToRemove", "EmployerAgreement", new {Model.Data.HashedAccountId})">Remove an organisation from your account</a></p>
        }
    </div>
</div>

@section breadcrumb {
    <div class="breadcrumbs">
        <ol role="navigation">
            <li><a href="@Url.Action("Index", "EmployerTeam", new {Model.Data.HashedAccountId})">Home</a></li>
            <li>Your organisations and agreements</li>
        </ol>
    </div>
}