@using SFA.DAS.EmployerAccounts.Models.AccountTeam;
@using SFA.DAS.EmployerAccounts.Models;
@model OrchestratorResponse<SFA.DAS.EmployerAccounts.Models.AccountTeam.TeamMember>

@{
    ViewBag.PageID = "page-review-team-member";
    ViewBag.Title = Model.Data.Name;
    ViewBag.Section = "team";
    ViewBag.GaData.Vpv = "/accounts/teams/review/page-review-team-member";

    string hashedAccountId = ViewContext.RouteData.Values[RouteValueKeys.HashedAccountId].ToString();
}

<div class="govuk-grid-row">
    <div class="govuk-grid-column-two-thirds">
        <h1 class="govuk-heading-xl">@Model.Data.Name</h1>
    </div>
</div>

         <table class="govuk-table das-table--responsive">
            <thead class="govuk-table__head">
                <tr class="govuk-table__row">
                    <th scope="col" class="govuk-table__header">Email</th>
                    <th scope="col" class="govuk-table__header">What they can do</th>
                    @if (Model.Data.IsUser)
                    {
                        <th class="govuk-table__header"><span class="govuk-visually-hidden">Action</span></th>
                    }
                </tr>
            </thead>
            <tbody class="govuk-table__body">
                <tr class="govuk-table__row">
                    <td data-label="Email" class="govuk-table__cell">@Model.Data.Email</td>
                    <td data-label="What they can do" class="govuk-table__cell">@RoleStrings.GetRoleDescription(@Model.Data.Role)</td>
                    @if (Model.Data.IsUser)
                    {
                        <td class="govuk-table__cell govuk-table__cell--numeric">
                            <a asp-route="@RouteNames.EmployerTeamGetChangeRole"
                           asp-route-hashedAccountId="@hashedAccountId"
                           asp-route-email="@Model.Data.Email" class="govuk-link">Change <span class="govuk-visually-hidden">role for @Model.Data.Name</span></a>
                        </td>
                    }
                </tr>
            </tbody>
        </table>

        @if (@Model.Data.Status == InvitationStatus.Pending || @Model.Data.Status == InvitationStatus.Expired)
        {
            <form asp-route="@RouteNames.EmployerTeamResendInvite" asp-route-hashedAccountId="@hashedAccountId" method="POST">
                <input type="hidden" id="Email" name="Email" value="@Model.Data.Email" />
                <input type="hidden" id="Name" name="Name" value="@Model.Data.Name" />
                <div class="govuk-button-group">
                        <button type="submit" class="govuk-button" id="resend_invitation">Resend invitation</button>
                        <a asp-route="@RouteNames.EmployerTeamCancelInvitation"
                            asp-route-hashedAccountId="@hashedAccountId"
                            asp-route-email="@Model.Data.Email"
                            asp-route-hashedInvitationId="@Model.Data.HashedInvitationId"
                            class="govuk-link">Cancel invitation</a>
                </div>
            </form>
        }
        @if (@Model.Data.IsUser)
        {
            <form asp-route="@RouteNames.RemoveTeamMember" asp-route-hashedAccountId="@hashedAccountId" asp-route-email="@Model.Data.Email" method="GET">
                <input type="hidden" id="Email" name="Email" value="@Model.Data.Email" />
                <button type="submit" class="govuk-button govuk-button--warning" id="delete_user">Remove team member</button>
            </form>

        }


@section breadcrumb {
    <a asp-route="@RouteNames.EmployerTeamView" asp-route-hashedAccountId="@hashedAccountId" class="govuk-back-link">Back to your team</a>
}