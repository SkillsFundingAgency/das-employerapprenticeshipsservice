@using SFA.DAS.Authorization
@using SFA.DAS.Authorization.Mvc
@using SFA.DAS.Common.Domain.Types
@using SFA.DAS.EmployerAccounts.Web.Extensions
@using SFA.DAS.EmployerAccounts.Web.Helpers
@using TasksEnum = SFA.DAS.Tasks.API.Types.Enums
@using SFA.DAS.EmployerAccounts.Web.Extensions

@model SFA.DAS.EmployerAccounts.Web.OrchestratorResponse<SFA.DAS.EmployerAccounts.Web.ViewModels.AccountDashboardViewModel>

@{
    ViewBag.Title = "Home";
    ViewBag.Section = "home";
    ViewBag.PageID = "page-company-homepage";
    ViewBag.GaData.Vpv = "/accounts/agreements/page-company-homepage";
    ViewBag.ZenDeskLabel = "eas-homepage";

    if (!string.IsNullOrEmpty(Model.Data.EmployerAccountType))
    {
        ViewBag.PageID = $"page-employer-account-created-{Model.Data.EmployerAccountType}";
    }
}


@if (Model.Data.ShowTermsAndConditionBanner)
{
    <div class="govuk-notification-banner govuk-notification-banner--dashboard" role="region" aria-labelledby="govuk-notification-banner-title" data-module="govuk-notification-banner">
        <div class="govuk-notification-banner__header">
            <h2 class="govuk-notification-banner__title" id="govuk-notification-banner-title">
                Action required
            </h2>
        </div>
        <div class="govuk-notification-banner__content">
            <p class="govuk-notification-banner__heading">
                We've updated our <a class="govuk-notification-banner__link" href="@Url.Action("TermsAndConditions", "Home", new { returnUrl = "EmployerTeam", HashedAccountId = Model.Data.HashedAccountId })">terms of use</a>. By continuing to use this service you are accepting the updated terms.
            </p>
        </div>
    </div>
}
<h1 class="heading-secondary dashboard-heading">
    Account ID: @Model.Data.Account.PublicHashedId
</h1>
<p class="heading-xlarge dashboard-heading-company">@Model.Data.Account.Name</p>

<hr class="dashboard-heading-separator" />

@if (!Model.Data.HasPayeScheme && Model.Data.OrganisationCount == 0)
{
    <div class="grid-row">
        <div class="column-two-thirds">
            @Html.Action("Row1Panel1", new { model = Model.Data })
        </div>
    </div>
}
else
{
    <div class="grid-row">
        <div class="column-two-thirds">
            @Html.Action("Row1Panel1", new { model = Model.Data })
            <section class="dashboard-section">
                <div class="grid-row">
                    <div class="column-two-thirds">
                        <h2 class="section-heading heading-large">Apprenticeships</h2>
                        <p class="section-description">Manage your apprentices, advertise apprenticeships and set training provider permissions</p>
                    </div>
                </div>
                <div class="cards">
                    <div class="card">
                        <h3 class="heading-medium"><a href="@Url.EmployerCommitmentsV2Action("")">Apprentices</a></h3>
                        <p>Add apprentices, update details of existing apprentices, change training providers and authorise payments to training providers.</p>
                    </div>
                    @if (Html.IsAuthorized("EmployerFeature.Recruitments"))
                    {
                        <div class="card">
                            <h3 class="heading-medium"><a href="@Url.EmployerRecruitAction()">Your apprenticeship adverts</a></h3>
                            <p>Create adverts to post on find an apprenticeship, view applications, your previous adverts and adverts created by training providers.</p>
                        </div>
                    }
                    @if (Html.IsAuthorized("EmployerFeature.ProviderRelationships"))
                    {
                        <div class="card">
                            <h3 class="heading-medium"><a href="@Url.ProviderRelationshipsAction("providers")">Your training providers</a></h3>
                            <p>Add training providers and manage permissions to choose what they can do on your behalf.</p>
                        </div>
                    }
                    <div class="card">
                        <h3 class="heading-medium"><a href="https://findapprenticeshiptraining.apprenticeships.education.gov.uk/Apprenticeship/Search" rel="external" target="_blank">Find apprenticeship training</a></h3>
                        <p>Search for apprenticeships and see details of approved providers who can deliver the training.</p>
                    </div>
                </div>
            </section>

            <section class="dashboard-section">
                <div class="grid-row">
                    <div class="column-two-thirds">
                        <h2 class="section-heading heading-large">Finances</h2>
                        <p class="section-description">Manage your apprenticeship funds</p>
                    </div>
                </div>
                <div class="cards">
                    @if (Model.Data.ShowYourFundingReservationsLink())
                    {
                        <div class="card">
                            <h3 class="heading-medium"><a href="@Url.ReservationsAction("reservations/manage")">Your funding reservations</a></h3>
                            <p>Reserve and manage funding.</p>
                        </div>
                    }

                    <div class="card">
                        <h3 class="heading-medium"><a href="@Url.EmployerFinanceAction("finance")">Your finances</a></h3>
                        <p>View your financial transactions, connect with other employers and @(Model.Data.ApprenticeshipEmployerType == ApprenticeshipEmployerType.Levy ? "send or " : "")receive transfer funds.</p>
                    </div>

                    @if (Html.IsAuthorized("EmployerFeature.EmployerIncentives"))
                    {
                        <div class="card">
                            <h3 class="heading-medium"><a href="@Url.EmployerIncentivesAction()">Your hire a new apprentice payments</a></h3>
                            <p>Apply for the payment, view applications and change your payment details</p>
                        </div>
                    }

                    @if (Html.IsAuthorized("EmployerFeature.TransfersMatching"))
                    {
                        if (Model.Data.ApprenticeshipEmployerType == ApprenticeshipEmployerType.Levy)
                        {
                            <div class="card">
                                <h3 class="heading-medium"><a href="@Url.EmployerFinanceAction("transfers")">Your transfers</a></h3>
                                <p>View your 25% transfers balance and manage your transfers, including finding a business to transfer your levy to.</p>
                            </div>
                        }
                        else if (Model.Data.ApprenticeshipEmployerType == ApprenticeshipEmployerType.NonLevy)
                        {
                            <div class="card">
                                <h3 class="heading-medium"><a href="@Url.EmployerFinanceAction("transfers")">Your transfers</a></h3>
                                <p>View your apprentices funded by a transfer. Find a large business to fund your apprenticeship training with a transfer.</p>
                            </div>
                        }
                    }


                </div>
            </section>

            <section class="dashboard-section">
                <div class="grid-row">
                    <div class="column-two-thirds">
                        <h2 class="section-heading heading-large">Account</h2>
                        <p class="section-description">Manage your account details and team</p>
                    </div>
                </div>
                <div class="cards">
                    <div class="card">
                        <h3 class="heading-medium"><a href="@Url.Action("Index", "EmployerAgreement")">Your organisations and agreements</a></h3>
                        <p>Add your organisations that will make contracts with training providers.</p>
                    </div>
                    <div class="card">
                        <h3 class="heading-medium"><a href="@Url.Action("ViewTeam")">Your team</a></h3>
                        <p>Control what your team can do and invite new team members.</p>
                    </div>
                    <div class="card">
                        <h3 class="heading-medium"><a href="@Url.Action("Index", "EmployerAccountPaye")">PAYE schemes</a></h3>
                        <p>Add or remove PAYE schemes.</p>
                    </div>
                </div>
            </section>

            @Html.GetContentByType("covid_section")
            

            <div class="panel panel-filled">
                <h3 class="heading-medium">Help us improve this service</h3>
                <p><a href="https://www.smartsurvey.co.uk/s/apprenticeshipservicefeedback/" target="_blank">Take our 3 minute survey</a> so that we can improve this service.</p>
                <p><a href="https://www.smartsurvey.co.uk/s/apprenticeshipservicefeedback/" target="_blank" class="button">Take the survey <span class="vh">so that we can improve the service</span></a></p>
            </div>
        </div>
        <div class="column-one-third">
            @if (!Model.Data.HideTasksBar)
            {
                <section>
                    <nav>
                        <ul class="js-tabs" role="tablist">
                            <li role="tab" id="tab-tasks" aria-controls="pane-tasks"><a href="#pane-tasks">Tasks</a></li>
                            @if (Html.IsAuthorized("EmployerFeature.Activities"))
                            {
                                <li role="tab" id="tab-activity" aria-controls="pane-activity"><a href="#pane-activity">Activity</a></li>
                            }
                        </ul>
                    </nav>
                    <div class="panes">
                        <div class="js-tab-pane" id="pane-tasks" role="tabpanel">
                            @if (Model.Data.Tasks.Count > 0)
                            {
                                <ul class="task-list">
                                    @{
                                        var priorityOrderTaskList = Model.Data.Tasks.OrderBy(AccountTaskHelper.GetTaskPriority).ToArray();
                                    }

                                    @foreach (var task in priorityOrderTaskList)
                                    {
                                        <li>
                                            @switch (task.Type)
                                            {
                                                case "LevyDeclarationDue":
                                                    <p>
                                                        Levy declaration due by 19 @DateTime.Now.ToString("MMMM")
                                                    </p>
                                                    <form action="@Url.Action("DismissTask", "Task")" method="POST">
                                                        <input type="hidden" name="taskType" value="@Enum.GetName(typeof(TasksEnum.TaskType), TasksEnum.TaskType.LevyDeclarationDue)" />
                                                        <button class="button-link" type="submit">Dismiss this message</button>
                                                    </form>
                                                    break;
                                                case "AgreementToSign":
                                                    <p>
                                                        @task.ItemsDueCount agreement@(task.ItemsDueCount > 1 ? "s" : "") to sign <a href="@Url.Action("ViewUnsignedAgreements", "EmployerAgreement")">View agreements</a>
                                                    </p>
                                                    break;
                                                case "AddApprentices":
                                                    <p>
                                                        <a href="@Url.EmployerCommitmentsV2Action("unapproved/Inform")">Start adding apprentices now</a>
                                                    </p>
                                                    break;
                                                case "ApprenticeChangesToReview":
                                                    <p>
                                                        @task.ItemsDueCount apprentice change@(task.ItemsDueCount > 1 ? "s" : "") to review <a href="@Url.EmployerCommitmentsV2Action("apprentices")">View changes</a>
                                                    </p>
                                                    break;
                                                case "CohortRequestReadyForApproval":
                                                    <p>
                                                        @task.ItemsDueCount cohort request@(task.ItemsDueCount > 1 ? "s" : "") ready for approval <a href="@Url.EmployerCommitmentsV2Action("unapproved/review")">View cohorts</a>
                                                    </p>
                                                    break;
                                                case "ReviewConnectionRequest":
                                                    <p>
                                                        @task.ItemsDueCount connection request@(task.ItemsDueCount > 1 ? "s" : "") to review <a href="@Url.Action("Index", "Transfers")">View details</a>
                                                    </p>
                                                    break;
                                                case "TransferRequestReceived":
                                                    <p>
                                                        Transfer request received<a href="@Url.Action("Index", "Transfers")">View details</a>
                                                    </p>
                                                    break;
                                            }
                                        </li>
                                    }
                                </ul>
                            }
                            else
                            {
                                <p>You do not have any tasks</p>
                            }
                        </div>
                        @if (Html.IsAuthorized("EmployerFeature.Activities"))
                        {
                            <div class="js-tab-pane" id="pane-activity" role="tabpanel">
                                @Html.Action("Latest", "Activities")
                            </div>
                        }
                    </div>
                </section>
            }
        </div>
    </div>
}

@if (Model.Data.ShowAcademicYearBanner)
{
    <section>
        <div class="panel alert-default">
            <h4 class="heading-small">Apprentice records in 2016/17</h4>
            <p>It's critical that you complete and approve any apprentice records for the academic year ending 31 July 2017 before <strong>18:00 on 19 October 2017</strong>.  After this date you will not be able to update apprentice details from 2016/17 or make payments for training in this period.</p>
        </div>
    </section>
}



@*@if (Model.Data.RequiresAgreementSigning > 0)
    {
        <section>
            <div class="panel alert-default">
                <h3 class="heading-small">Spending not enabled (@Model.Data.RequiresAgreementSigning)</h3>

                @if (Model.Data.UserRole == Role.Owner)
                {
                    <p>You need to <a href="@Url.Action("Index", "EmployerAgreement")">sign an agreement</a> to enable your organisations to spend funds.</p>
                }

                @if (Model.Data.UserRole == Role.Transactor)
                {
                    <p>An agreement needs to be signed to enable your organisations to spend funds. <a href="@Url.Action("Index", "EmployerAgreement")">View this agreement</a>.</p>
                }
            </div>
        </section>
    }

    <section>
        @foreach (var task in Model.Data.Tasks)
        {
            <div class="panel alert-default">
                <h3 class="heading-small">@task.Type</h3>
                <p>You have @task.ItemsDueCount items</p>
            </div>
        }
    </section>*@
