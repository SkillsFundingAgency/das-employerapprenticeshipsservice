@using SFA.DAS.Common.Domain.Types
@using SFA.DAS.EmployerAccounts.Web.Extensions
@using SFA.DAS.EmployerAccounts.Web.Helpers
@using TasksEnum = SFA.DAS.Tasks.API.Types.Enums
@using SFA.DAS.EmployerAccounts.Web.Extensions

@model SFA.DAS.EmployerAccounts.Web.OrchestratorResponse<SFA.DAS.EmployerAccounts.Web.ViewModels.AccountDashboardViewModel>

@{
    ViewBag.Title = "Home";
    ViewBag.Section = "home";
    ViewBag.PageID = "page-company-homepage";
    ViewBag.GaData.Vpv = "/accounts/agreements/page-company-homepage";
    ViewBag.ZenDeskLabel = "eas-homepage";
    Layout = "~/Views/Shared/_Layout_CDN.cshtml";

    if (!string.IsNullOrEmpty(Model.Data.EmployerAccountType))
    {
        ViewBag.PageID = $"page-employer-account-created-{Model.Data.EmployerAccountType}";
    }
}


@if (Model.Data.ShowTermsAndConditionBanner)
{
    <div class="govuk-notification-banner" role="region" aria-labelledby="govuk-notification-banner-title" data-module="govuk-notification-banner">
        <div class="govuk-notification-banner__header">
            <h2 class="govuk-notification-banner__title" id="govuk-notification-banner-title">
                Action required
            </h2>
        </div>
        <div class="govuk-notification-banner__content">
            <p class="govuk-notification-banner__heading">
                We've updated our <a class="govuk-notification-banner__link" href="@Url.Action("TermsAndConditions", "Home", new { returnUrl = "EmployerTeam", HashedAccountId = Model.Data.HashedAccountId })">terms of use</a>. By continuing to use this service you are accepting the updated terms.
            </p>
        </div>
    </div>
}

<h1 class="govuk-heading-xl govuk-!-margin-0">@Model.Data.Account.Name</h1>

<div class="govuk-inset-text">
    <dl class="das-definition-list das-definition-list--inline">
        <dt class="das-definition-list__title">Account ID</dt>
        <dd class="das-definition-list__definition">@Model.Data.Account.PublicHashedId</dd>
        @if (Model.Data.HasPayeScheme)
        {
            <dt class="das-definition-list__title">Agreement ID</dt>
            <dd class="das-definition-list__definition">
                @if (string.IsNullOrEmpty(Model.Data.SingleAccountLegalEntityId))
                {
                    <a href="@Url.Action("Index", "EmployerAgreement")" class="govuk-link govuk-link--no-visited-state">View your agreement IDs</a>
                }
                else
                {
                    <span>@Model.Data.SingleAccountLegalEntityId</span>
                }
            </dd>
        }
    </dl>
</div>

<hr class="govuk-section-break govuk-section-break--l govuk-section-break--visible das-section-break--heavy-grey">

@if (!Model.Data.HasPayeScheme && Model.Data.OrganisationCount == 0)
{
    <div class="govuk-grid-row">
        <div class="govuk-grid-column-two-thirds">
            @Html.Action("Row1Panel1", new { model = Model.Data })
        </div>
    </div>
}
else
{
    <div class="govuk-grid-row">
        <div class="govuk-grid-column-two-thirds">

            @Html.Action("Row1Panel1", new { model = Model.Data })

            <section>
                <h2 class="govuk-heading-l govuk-!-margin-bottom-2">Apprenticeships</h2>
                <p class="govuk-caption-m govuk-!-width-two-thirds govuk-!-margin-bottom-6">Manage your apprentices, advertise apprenticeships and set training provider permissions</p>
                <div class="das-cards">
                    <div class="das-card">
                        <h3 class="govuk-heading-m das-card__heading">
                            <a href="@Url.EmployerCommitmentsV2Action("")" class="govuk-link govuk-link--no-visited-state">Apprentices</a>
                        </h3>
                        <p class="govuk-body govuk-!-font-size-16">Add apprentices, update details of existing apprentices, change training providers and authorise payments to training providers.</p>
                    </div>
                    <div class="das-card">
                            <h3 class="govuk-heading-m das-card__heading">
                                <a href="@Url.EmployerRecruitAction()" class="govuk-link govuk-link--no-visited-state">Your apprenticeship adverts</a>
                            </h3>
                            <p class="govuk-body govuk-!-font-size-16">Create adverts to post on find an apprenticeship, view applications, your previous adverts and adverts created by training providers.</p>
                        </div>                   
                    <div class="das-card">
                        <h3 class="govuk-heading-m das-card__heading">
                            <a href="@Url.ProviderRelationshipsAction("providers")" class="govuk-link govuk-link--no-visited-state">Your training providers</a>
                        </h3>
                        <p class="govuk-body govuk-!-font-size-16">Add training providers and manage permissions to choose what they can do on your behalf.</p>
                    </div>                   
                    <div class="das-card">
                        <h3 class="govuk-heading-m das-card__heading">
                            <a href="https://findapprenticeshiptraining.apprenticeships.education.gov.uk/Apprenticeship/Search" rel="external" target="_blank" class="govuk-link govuk-link--no-visited-state">Find apprenticeship training</a>
                        </h3>
                        <p class="govuk-body govuk-!-font-size-16">Search for apprenticeships and see details of approved providers who can deliver the training.</p>
                    </div>
                    <div class="das-card">
                        <h3 class="govuk-heading-m das-card__heading">
                            <a href="@Url.EmployerFeedbackAction("providers")" class="govuk-link govuk-link--no-visited-state">Feedback on training providers</a>
                        </h3>
                        <p class="govuk-body govuk-!-font-size-16">Give feedback on your training providers.</p>
                    </div>
                </div>
            </section>
            <hr class="govuk-section-break govuk-section-break--l govuk-section-break--visible">
            <section>
                <h2 class="govuk-heading-l govuk-!-margin-bottom-2">Finances</h2>
                <p class="govuk-caption-m govuk-!-width-two-thirds govuk-!-margin-bottom-6">Manage your apprenticeship funds</p>
                <div class="das-cards">
                    @if (Model.Data.ShowYourFundingReservationsLink())
                    {
                        <div class="das-card">
                            <h3 class="govuk-heading-m das-card__heading">
                                <a href="@Url.ReservationsAction("reservations/manage")" class="govuk-link govuk-link--no-visited-state">Your funding reservations</a>
                            </h3>
                            <p class="govuk-body govuk-!-font-size-16">Reserve and manage funding.</p>
                        </div>
                    }

                    <div class="das-card">
                        <h3 class="govuk-heading-m das-card__heading">
                            <a href="@Url.EmployerFinanceAction("finance")" class="govuk-link govuk-link--no-visited-state">Your finances</a>
                        </h3>
                        <p class="govuk-body govuk-!-font-size-16">View your financial transactions, connect with other employers and @(Model.Data.ApprenticeshipEmployerType == ApprenticeshipEmployerType.Levy ? "send or " : "")receive transfer funds.</p>
                    </div>

                    @if (Html.IsAuthorized("EmployerFeature.EmployerIncentives"))
                    {
                        <div class="das-card">
                            <h3 class="govuk-heading-m das-card__heading">
                                <a href="@Url.EmployerIncentivesAction()" class="govuk-link govuk-link--no-visited-state">Your hire a new apprentice payments</a>
                            </h3>
                            <p class="govuk-body govuk-!-font-size-16">Apply for the payment, view applications and change your payment details.</p>
                        </div>
                    }

                    @if (Model.Data.ApprenticeshipEmployerType == ApprenticeshipEmployerType.Levy)
                    {
                        <div class="das-card">
                            <h3 class="govuk-heading-m das-card__heading">
                                <a href="@Url.EmployerFinanceAction("transfers")" class="govuk-link govuk-link--no-visited-state">Your transfers</a>
                            </h3>
                            <p class="govuk-body govuk-!-font-size-16">View your 25% transfers balance and manage your transfers, including finding a business to transfer your levy to.</p>
                        </div>
                    }
                    else if (Model.Data.ApprenticeshipEmployerType == ApprenticeshipEmployerType.NonLevy)
                    {
                        <div class="das-card">
                            <h3 class="govuk-heading-m das-card__heading">
                                <a href="@Url.EmployerFinanceAction("transfers")" class="govuk-link govuk-link--no-visited-state">Your transfers</a>
                            </h3>
                            <p class="govuk-body govuk-!-font-size-16">View your apprentices funded by a transfer. Find a large business to fund your apprenticeship training with a transfer.</p>
                        </div>
                    }
                </div>
            </section>
            <hr class="govuk-section-break govuk-section-break--l govuk-section-break--visible">
            <section>
                <h2 class="govuk-heading-l govuk-!-margin-bottom-2">Account</h2>
                <p class="govuk-caption-m govuk-!-width-two-thirds govuk-!-margin-bottom-6">Manage your account details and team</p>
                <div class="das-cards">
                    <div class="das-card">
                        <h3 class="govuk-heading-m das-card__heading"><a href="@Url.Action("Index", "EmployerAgreement")" class="govuk-link govuk-link--no-visited-state">Your organisations and agreements</a></h3>
                        <p class="govuk-body govuk-!-font-size-16">Add your organisations that will make contracts with training providers.</p>
                    </div>
                    <div class="das-card">
                        <h3 class="govuk-heading-m das-card__heading"><a href="@Url.Action("ViewTeam")" class="govuk-link govuk-link--no-visited-state">Your team</a></h3>
                        <p class="govuk-body govuk-!-font-size-16">Control what your team can do and invite new team members.</p>
                    </div>
                    <div class="das-card">
                        <h3 class="govuk-heading-m das-card__heading"><a href="@Url.Action("Index", "EmployerAccountPaye")" class="govuk-link govuk-link--no-visited-state">PAYE schemes</a></h3>
                        <p class="govuk-body govuk-!-font-size-16">Add or remove PAYE schemes.</p>
                    </div>
                </div>
            </section>
            @Html.GetContentByType("covid_section")
            <div class="das-highlight">
                <h2 class="govuk-heading-m">Help us improve this service</h2>
                <p class="govuk-body govuk-!-margin-bottom-0"><a href="https://www.smartsurvey.co.uk/s/apprenticeshipservicefeedback/" class="govuk-link" rel="nofollow" target="_blank">Take our 3 minute survey</a> so that we can improve this service.</p>
            </div>
        </div>
        <div class="govuk-grid-column-one-third">
            @if (!Model.Data.HideTasksBar)
            {
                <div class="govuk-tabs" data-module="govuk-tabs">
                    <h2 class="govuk-tabs__title">
                        Contents
                    </h2>
                    <ul class="govuk-tabs__list">
                        <li class="govuk-tabs__list-item govuk-tabs__list-item--selected">
                            <a class="govuk-tabs__tab" href="#tasks">
                                Tasks
                            </a>
                        </li>                        
                    </ul>
                    <div class="govuk-tabs__panel" id="tasks">
                        @if (Model.Data.Tasks.Count > 0)
                        {
                            <ul class="govuk-list">
                                @{
                                    var priorityOrderTaskList = Model.Data.Tasks.OrderBy(AccountTaskHelper.GetTaskPriority).ToArray();
                                }

                                @foreach (var task in priorityOrderTaskList)
                                {
                                    <li>
                                        @switch (task.Type)
                                        {
                                            case "LevyDeclarationDue":
                                                <span>
                                                    Levy declaration due by 19 @DateTime.Now.ToString("MMMM")
                                                </span>
                                                <form action="@Url.Action("DismissTask", "Task")" method="POST">
                                                    <input type="hidden" name="taskType" value="@Enum.GetName(typeof(TasksEnum.TaskType), TasksEnum.TaskType.LevyDeclarationDue)" />
                                                    <button type="submit" class="das-button--inline-link">Dismiss this message</button>
                                                </form>
                                                break;
                                            case "AgreementToSign":
                                                <span>
                                                    @task.ItemsDueCount agreement@(task.ItemsDueCount > 1 ? "s" : "") to sign
                                                    <br /><a href="@Url.Action("ViewUnsignedAgreements", "EmployerAgreement")" class="govuk-link govuk-link govuk-link--no-visited-state">View agreement@(task.ItemsDueCount > 1 ? "s" : "")</a>
                                                </span>
                                                break;
                                            case "AddApprentices":
                                                <span>
                                                    <a href="@Url.EmployerCommitmentsV2Action("unapproved/Inform")" class="govuk-link govuk-link govuk-link--no-visited-state">Start adding apprentices now</a>
                                                </span>
                                                break;
                                            case "ApprenticeChangesToReview":
                                                <span>
                                                    @task.ItemsDueCount apprentice change@(task.ItemsDueCount > 1 ? "s" : "") to review
                                                    <br /><a href="@Url.EmployerCommitmentsV2Action("apprentices")" class="govuk-link govuk-link govuk-link--no-visited-state">View<span class="govuk-visually-hidden">apprentice</span> change@(task.ItemsDueCount > 1 ? "s" : "")</a>
                                                </span>
                                                break;
                                            case "CohortRequestReadyForApproval":
                                                <span>
                                                    @task.ItemsDueCount cohort request@(task.ItemsDueCount > 1 ? "s" : "") ready for approval
                                                    <br /><a href="@Url.EmployerCommitmentsV2Action("unapproved/review")" class="govuk-link govuk-link govuk-link--no-visited-state">View cohort<span class="govuk-visually-hidden"> request</span>@(task.ItemsDueCount > 1 ? "s" : "")</a>
                                                </span>
                                                break;
                                            case "ReviewConnectionRequest":
                                                <span>
                                                    @task.ItemsDueCount connection request@(task.ItemsDueCount > 1 ? "s" : "") to review
                                                    <br /><a href="@Url.Action("Index", "Transfers")" class="govuk-link govuk-link govuk-link--no-visited-state">View details<span class="govuk-visually-hidden"> of connection request@(task.ItemsDueCount > 1 ? "s" : "")</span></a>
                                                </span>
                                                break;
                                            case "TransferRequestReceived":
                                                <span>
                                                    Transfer request received
                                                    <br /><a href="@Url.Action("Index", "Transfers")" class="govuk-link">View details<span class="govuk-visually-hidden"> of the transfer request</span></a>
                                                </span>
                                                break;
                                            case "PledgeApplicationForReview":
                                                <span>
                                                    @task.ItemsDueCount transfer pledge application@(task.ItemsDueCount > 1 ? "s" : "") awaiting your approval
                                                    <br /><a href="@Url.LevyTransfersMatchingAction("pledges")" class="govuk-link govuk-link--no-visited-state">View<span class="govuk-visually-hidden"> transfer pledge</span> application@(task.ItemsDueCount > 1 ? "s" : "")</a>
                                                </span>
                                                break;
                                        }
                                        <hr class="govuk-section-break govuk-section-break--m govuk-section-break--visible">
                                    </li>
                                }
                            </ul>
                        }
                        else
                        {
                            <p>You do not have any tasks</p>
                        }
                    </div>                   
                </div>
            }
        </div>
    </div>
}
