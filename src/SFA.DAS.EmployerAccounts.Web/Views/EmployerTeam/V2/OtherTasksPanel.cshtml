@using SFA.DAS.Authorization
@using SFA.DAS.Authorization.Mvc
@using SFA.DAS.EmployerAccounts.Web.Helpers
@using SFA.DAS.Tasks.API.Types.Enums
@using SFA.DAS.EmployerAccounts.Web.Extensions


@model SFA.DAS.EmployerAccounts.Web.ViewModels.AccountDashboardViewModel

<section class="das-section das-section--overlay" aria-labelledby="other-tasks-link" id="das-dashboard-other-tasks">
    <div class="govuk-width-container das-section__inner-wrap" tabindex="-1">
        <div class="govuk-grid-row">
            <div class="govuk-grid-column-two-thirds">
                <section class="das-section-dashboard">
                    <h2 class="das-section__heading govuk-heading-l">Apprenticeships</h2>
                    <p class="das-section__description">Manage your apprentices, recruit apprentice and set training provider permissions.</p>
                    <div class="das-cards">
                        <div class="das-card">
                            <h3 class="govuk-heading-m das-card__heading"><a href="@Url.EmployerCommitmentsAction("apprentices/home")" class="govuk-link">Apprentices</a></h3>
                            <p>Add apprentices, update details of existing apprentices and authorise payments to training providers.</p>
                        </div>
                        <div class="das-card">
                            <h3 class="govuk-heading-m das-card__heading"><a href="@Url.EmployerRecruitAction()" class="govuk-link">Recruitment</a></h3>
                            <p>Recruit an apprentice by creating a vacancy. This vacancy will be advertised on Find an apprenticeship.</p>
                        </div>
                        <div class="das-card">
                            <h3 class="govuk-heading-m das-card__heading"><a href="@Url.ProviderRelationshipsAction("providers")" class="govuk-link">Training provider permissions</a></h3>
                            <p>Set training provider permissions and control what tasks they can do on your behalf.</p>
                        </div>
                        <div class="das-card">
                            <h3 class="govuk-heading-m"><a href="https://findapprenticeshiptraining.apprenticeships.education.gov.uk/Apprenticeship/Search" rel="external" class="govuk-link">Find apprenticeship training</a></h3>
                            <p>Search for apprenticeships and see details of approved providers who can deliver the training.</p>
                        </div>
                    </div>
                </section>
                <section class="das-section-dashboard">
                    <h2 class="das-section__heading govuk-heading-l">Finances</h2>
                    <p class="das-section__description">Manage your apprenticeship funds.</p>
                    <div class="das-cards">
                        <div class="das-card">
                            <h3 class="govuk-heading-m das-card__heading"><a href="@Url.ReservationsAction("reservations/manage")" class="govuk-link">Manage your funds</a></h3>
                            <p>Reserve and manage funding.</p>
                        </div>
                        <div class="das-card">
                            <h3 class="govuk-heading-m das-card__heading"><a href="@Url.EmployerFinanceAction("finance")" class="govuk-link">Manage your levy</a></h3>
                            <p>View your financial transactions, connect with other employers and send or receive transfer funds.</p>
                        </div>
                    </div>
                </section>
                <section class="das-section-dashboard--last">
                    <h2 class="das-section__heading govuk-heading-l">Account</h2>
                    <p class="das-section__description">Manage your account details and team.</p>
                    <div class="das-cards">
                        <div class="das-card">
                            <h3 class="govuk-heading-m das-card__heading"><a href="@Url.Action("Index", "EmployerAgreement")" class="govuk-link">Your organisations and agreements</a></h3>
                            <p>Add your organisations that will make contracts with training providers.</p>
                        </div>
                        <div class="das-card">
                            <h3 class="govuk-heading-m das-card__heading"><a href="@Url.Action("ViewTeam")" class="govuk-link">Your team</a></h3>
                            <p>Control what your team can do and invite new team members.</p>
                        </div>
                        <div class="das-card">
                            <h3 class="govuk-heading-m das-card__heading"><a href="@Url.Action("Index", "EmployerAccountPaye")" class="govuk-link">PAYE schemes</a></h3>
                            <p>Add or remove PAYE schemes.</p>
                        </div>
                    </div>
                </section>
            </div>
            <div class="govuk-grid-column-one-third">
                <div class="govuk-tabs" data-module="tabs">

                    <ul class="govuk-tabs__list">
                        <li class="govuk-tabs__list-item">
                            <a class="govuk-tabs__tab govuk-tabs__tab--selected" href="#tab-tasks">
                                Tasks
                            </a>
                        </li>
                    @if (Html.IsAuthorized("EmployerFeature.Activities"))
                    {
                        <li class="govuk-tabs__list-item">
                            <a class="govuk-tabs__tab" href="#tab-activity">
                                Activity
                            </a>
                        </li>
                    }
                    </ul>

                    <section class="govuk-tabs__panel" id="tab-tasks">
                        <div class="panes">
                            <div class="js-tab-pane" id="pane-tasks" role="tabpanel">
                                @if (Model.Tasks.Count > 0)
                                {
                                    <ul class="task-list">
                                        @{
                                            var priorityOrderTaskList = Model.Tasks.OrderBy(AccountTaskHelper.GetTaskPriority).ToArray();
                                        }

                                        @foreach (var task in priorityOrderTaskList)
                                        {
                                            <li>
                                                @switch (task.Type)
                                                {
                                                    case "LevyDeclarationDue":
                                                        <p>
                                                            Levy declaration due by 19 @DateTime.Now.ToString("MMMM")
                                                        </p>
                                                        <form action="@Url.Action("DismissTask", "Task")" method="POST">
                                                            <input type="hidden" name="taskType" value="@Enum.GetName(typeof(TaskType), TaskType.LevyDeclarationDue)" />
                                                            <button class="button-link" type="submit">Dismiss this message</button>
                                                        </form>
                                                        break;
                                                    case "AgreementToSign":
                                                        <p>
                                                            @task.ItemsDueCount agreement@(task.ItemsDueCount > 1 ? "s" : "") to sign <a href="@Url.Action("ViewUnsignedAgreements", "EmployerAgreement")">View agreements</a>
                                                        </p>
                                                        break;
                                                    case "AddApprentices":
                                                        <p>
                                                            <a href="@Url.EmployerCommitmentsAction("apprentices/inform")">Start adding apprentices now</a>
                                                        </p>
                                                        break;
                                                    case "ApprenticeChangesToReview":
                                                        <p>
                                                            @task.ItemsDueCount apprentice change@(task.ItemsDueCount > 1 ? "s" : "") to review <a href="@Url.EmployerCommitmentsAction("apprentices/manage/all?RecordStatus=ChangesForReview")">View changes</a>
                                                        </p>
                                                        break;
                                                    case "CohortRequestReadyForApproval":
                                                        <p>
                                                            @task.ItemsDueCount cohort request@(task.ItemsDueCount > 1 ? "s" : "") ready for approval <a href="@Url.EmployerCommitmentsAction("apprentices/cohorts/review")">View cohorts</a>
                                                        </p>
                                                        break;
                                                    case "ReviewConnectionRequest":
                                                        <p>
                                                            @task.ItemsDueCount connection request@(task.ItemsDueCount > 1 ? "s" : "") to review <a href="@Url.Action("Index", "Transfers")">View details</a>
                                                        </p>
                                                        break;
                                                    case "TransferRequestReceived":
                                                        <p>
                                                            Transfer request received<a href="@Url.Action("Index", "Transfers")">View details</a>
                                                        </p>
                                                        break;
                                                }
                                            </li>
                                        }
                                    </ul>
                                }
                                else
                                {
                                    <p>You do not have any tasks</p>
                                }
                            </div>
   
                        </div>
                    </section>
                    <section class="govuk-tabs__panel govuk-tabs__panel--hidden" id="tab-activity">
                        @if (Html.IsAuthorized("EmployerFeature.Activities"))
                        {
                            <div class="js-tab-pane" id="pane-activity" role="tabpanel">
                                @Html.Action("Latest", "Activities")
                            </div>
                        }
                    </section>
                </div>
            </div>
        </div>
    </div>
</section>