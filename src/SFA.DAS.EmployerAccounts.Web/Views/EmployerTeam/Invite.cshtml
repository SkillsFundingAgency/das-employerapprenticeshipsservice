@using SFA.DAS.Authorization

@model OrchestratorResponse<SFA.DAS.EmployerAccounts.Web.ViewModels.InviteTeamMemberViewModel>

@{
    ViewBag.PageID = "page-invite-team-member";
    ViewBag.Title = "Create invitation";
    ViewBag.Section = "team";
}

@{
    ViewBag.GaData.Vpv = "/accounts/teams/invite/page-invite-team-member";
}
        <div class="grid-row">
            <div class="column-two-thirds">
                <h1 class="heading-xlarge">
                    Create invitation
                </h1>
                <p class="lede">Invite somebody to access this account.</p>
                <form method="POST" action="@Url.Action("Invite")">
                    @Html.AntiForgeryToken()
                    <div class="form-group @(!string.IsNullOrEmpty(Model.Data.EmailError) || !string.IsNullOrEmpty(Model.Data.ExistingMemberError) ? "error" : "")">

                        <label for="Email">
                            <span class="form-label-bold">Email</span>
                            <span class="form-hint">An invitation will be sent to this email address</span>
                            @if (!string.IsNullOrEmpty(Model.Data.EmailError))
                            {
                                <span class="error-message" id="error-message-email">@Model.Data.EmailError</span>
                            }
                            @if (!string.IsNullOrEmpty(Model.Data.ExistingMemberError))
                            {
                                <span class="error-message" id="error-message-email">@Model.Data.ExistingMemberError</span>
                            }
                        </label>
                        <input class="form-control form-control-3-4" id="Email" name="Email" type="text"
                               @(!string.IsNullOrEmpty(Model.Data.EmailError) || !string.IsNullOrEmpty(Model.Data.ExistingMemberError) ? " aria-describedby=error-message-email " : "")
                               aria-required="true" value="@Model.Data.Email" />
                    </div>

                    <div class="form-group @(!string.IsNullOrEmpty(Model.Data.NameError) ? "error" : "")">
                        <label for="Name">
                            <span class="form-label-bold" id="error-message-name">Full name</span>
                            @if (!string.IsNullOrEmpty(Model.Data.NameError))
                            {
                                <span class="error-message">@Model.Data.NameError</span>
                            }
                        </label>
                        <input class="form-control form-control-3-4" id="Name" name="Name" type="text"
                               @(!string.IsNullOrEmpty(Model.Data.NameError) ? " aria-describedby=error-message-name " : "")
                               aria-required="true" value="@Model.Data.Name" />
                    </div>
                    <div class="form-group @(!string.IsNullOrEmpty(Model.Data.RoleError) ? "error" : "")">
                        <fieldset>
                            <legend>
                                <span class="form-label-bold">Team member access</span>
                                <span class="form-hint">Choose the level of access this user can have.</span>
                                @if (!string.IsNullOrEmpty(Model.Data.RoleError))
                                {
                                    <span class="error-message" id="Role">@Model.Data.RoleError</span>
                                }
                            </legend>
                            <label class="block-label" for="radio1">
                                <input id="radio1" type="radio" name="Role" value="3" @(Model.Data.Role == Role.Viewer ? "checked" : "") />
                                @(RoleStrings.GetRoleDescription(Role.Viewer))
                            </label>
                            <label class="block-label" for="radio2">
                                <input id="radio2" type="radio" name="Role" value="2" @(Model.Data.Role == Role.Transactor ? "checked" : "") />
                                @(RoleStrings.GetRoleDescription(Role.Transactor))
                            </label>
                            <label class="block-label" for="radio3">
                                <input id="radio3" type="radio" name="Role" value="1" @(Model.Data.Role == Role.Owner ? "checked" : "") />
                                @(RoleStrings.GetRoleDescription(Role.Owner))
                            </label>
                        </fieldset>
                    </div>
                    <input type="hidden" id="HashedId" name="HashedId" value="@Model.Data.HashedAccountId" />
                    <button type="submit" class="button" id="send_invitation">Send invitation</button>
                </form>
            </div>
        </div>

@section breadcrumb {
    <div class="breadcrumbs">
        <a href="@Url.Action("ViewTeam", "EmployerTeam")", class="back-link">Back to your team</a>
    </div>
}
