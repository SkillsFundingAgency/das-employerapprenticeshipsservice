@using SFA.DAS.Authorization
@using SFA.DAS.Authorization.Mvc
@using SFA.DAS.EmployerAccounts.Web.Helpers
@using SFA.DAS.Tasks.API.Types.Enums

@model SFA.DAS.EmployerAccounts.Web.ViewModels.AccountDashboardViewModel


<section>
    <nav>
        <ul class="js-tabs" role="tablist">
            <li role="tab" id="tab-tasks" aria-controls="pane-tasks"><a href="#pane-tasks">Tasks</a></li>
            @if (Html.IsAuthorized(FeatureType.Activities))
            {
                <li role="tab" id="tab-activity" aria-controls="pane-activity"><a href="#pane-activity">Activity</a></li>
            }
        </ul>
    </nav>
    <div class="panes">
        <div class="js-tab-pane" id="pane-tasks" role="tabpanel">
            @if (Model.Tasks.Count > 0)
            {
                <ul class="task-list">
                    @{
                        var priorityOrderTaskList = Model.Tasks.OrderBy(AccountTaskHelper.GetTaskPriority).ToArray();
                    }

                    @foreach (var task in priorityOrderTaskList)
                    {
                        <li>
                            @switch (task.Type)
                            {
                                case "LevyDeclarationDue":
                                    <p>
                                        Levy declaration due by 19 @DateTime.Now.ToString("MMMM")
                                    </p>
                                    <form action="@Url.Action("DismissTask", "Task")" method="POST">
                                        <input type="hidden" name="taskType" value="@Enum.GetName(typeof(TaskType), TaskType.LevyDeclarationDue)" />
                                        <button class="button-link" type="submit">Dismiss this message</button>
                                    </form>
                                    break;
                                case "AgreementToSign":
                                    <p>
                                        @task.ItemsDueCount agreement@(task.ItemsDueCount > 1 ? "s" : "") to sign <a href="@Url.Action("ViewUnsignedAgreements", "EmployerAgreement")">View agreements</a>
                                    </p>
                                    break;
                                case "AddApprentices":
                                    <p>
                                        <a href="@Url.EmployerCommitmentsAction("apprentices/inform")">Start adding apprentices now</a>
                                    </p>
                                    break;
                                case "ApprenticeChangesToReview":
                                    <p>
                                        @task.ItemsDueCount apprentice change@(task.ItemsDueCount > 1 ? "s" : "") to review <a href="@Url.EmployerCommitmentsAction("apprentices/manage/all?RecordStatus=ChangesForReview")">View changes</a>
                                    </p>
                                    break;
                                case "CohortRequestReadyForApproval":
                                    <p>
                                        @task.ItemsDueCount cohort request@(task.ItemsDueCount > 1 ? "s" : "") ready for approval <a href="@Url.EmployerCommitmentsAction("apprentices/cohorts/review")">View cohorts</a>
                                    </p>
                                    break;
                                case "ReviewConnectionRequest":
                                    <p>
                                        @task.ItemsDueCount connection request@(task.ItemsDueCount > 1 ? "s" : "") to review <a href="@Url.Action("Index", "Transfers")">View details</a>
                                    </p>
                                    break;
                                case "TransferRequestReceived":
                                    <p>
                                        Transfer request received<a href="@Url.Action("Index", "Transfers")">View details</a>
                                    </p>
                                    break;
                            }
                        </li>
                    }
                </ul>
            }
            else
            {
                <p>You do not have any tasks</p>
            }
        </div>
        @if (Html.IsAuthorized(FeatureType.Activities))
        {
            <div class="js-tab-pane" id="pane-activity" role="tabpanel">
                @Html.Action("Latest", "Activities")
            </div>
        }
    </div>
</section>