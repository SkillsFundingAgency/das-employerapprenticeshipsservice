@using SFA.DAS.Authorization
@using SFA.DAS.EmployerAccounts.Models
@using SFA.DAS.EmployerAccounts.Models.AccountTeam

@model OrchestratorResponse<SFA.DAS.EmployerAccounts.Web.ViewModels.EmployerTeamMembersViewModel>

@{
    ViewBag.PageID = "page-manage-team";
    ViewBag.Title = "Manage team members";
    ViewBag.Section = "team";

    if (!string.IsNullOrEmpty(Model.FlashMessage?.HiddenFlashMessageInformation))
    {
        ViewBag.PageID = Model.FlashMessage.HiddenFlashMessageInformation;
    }

}

@{
    ViewBag.GaData.Vpv = "/accounts/teams/view/page-manage-team";
}

@{Layout = "~/Views/Shared/_Layout_CDN.cshtml"; }


<div class="govuk-grid-row">
    <div class="govuk-grid-column-two-thirds">
        <h1 class="govuk-heading-xl govuk-!-margin-bottom-6">Your team</h1>
    </div>
</div>

<div class="govuk-grid-row">
    <div class="govuk-grid-column-two-thirds">
        @if (Model.Data.TeamMembers.Count == 0)
        {
            <p class="govuk-body">TODO : EMPTY STATE</p>
        }
        else
        {
            <p class="govuk-body">Invite members, control what they can do, remove members and cancel or resend invitations.</p>
        }
    </div>
    <div class="govuk-grid-column-one-third">
        <form action="@Url.Action("Invite")" method="get">
            <input class="govuk-button das-float-right" id="addNewUser" type="submit" value="Invite a new member">
        </form>
    </div>
</div>

@if (Model.Data.TeamMembers.Count > 0)
{
    <div class="govuk-grid-row">
        <div class="govuk-grid-column-full">

            <table class="govuk-table">
                <caption class="govuk-table__caption govuk-visually-hidden">Table of what your team members can do</caption>
                <thead class="govuk-table__head">
                    <tr class="govuk-table__row">
                        <th scope="col" class="govuk-table__header">Name</th>
                        <th scope="col" class="govuk-table__header">What they can do</th>
                        <th scope="col" class="govuk-table__header">Status</th>
                        <th scope="col" class="govuk-table__header"><span class="govuk-visually-hidden">Action</span></th>
                    </tr>
                </thead>
                <tbody class="govuk-table__body">
                    @foreach (var teamMember in Model.Data.TeamMembers)
                    {
                        <tr class="govuk-table__row">
                            <td class="govuk-table__cell" data-label="Name">
                                @teamMember.Name
                                <span class="govuk-caption-m">@teamMember.Email</span>
                            </td>
                            <td class="govuk-table__cell" data-label="What they can do">@RoleStrings.GetRoleDescription(teamMember.Role)</td>
                            <td class="govuk-table__cell" data-label="Status">@InvitationStatusStrings.ToString(teamMember.Status)</td>
                            <td class="govuk-table__cell">
                                <a href="@Url.Action("Review", new { email = teamMember.Email })"
                                   class="govuk-link" aria-label="View details for @teamMember.Name"
                                   title="View details for @teamMember.Name">
                                    View<span class="govuk-visually-hidden"> details for @teamMember.Name</span>
                                </a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>

        </div>
    </div>
}

@section breadcrumb {
    <div class="govuk-breadcrumbs">
        <ol class="govuk-breadcrumbs__list" role="navigation">
            <li class="govuk-breadcrumbs__list-item"><a href="@Url.Action("Index", "EmployerTeam")" class="govuk-breadcrumbs__link">Home</a></li>
            <li class="govuk-breadcrumbs__list-item">Your team</li>
        </ol>
    </div>
}
