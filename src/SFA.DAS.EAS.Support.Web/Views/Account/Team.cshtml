@using SFA.DAS.EAS.Support.Web.Extensions
@using SFA.DAS.EAS.Support.Web.Models
@model AccountDetailViewModel

@if (Model.Account != null)
{
    <h1 class="heading-xlarge">
        Team members
    </h1>

    if (Model.Account.TeamMembers.Any())
    {
        <table class="responsive">
            <thead>
                <tr>
                    <th scope="col" class="">Name</th>
                    <th scope="col" class="">Email</th>
                    <th scope="col" class="">Role</th>
                    <th scope="col" class="">Invitation Status</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.Account.TeamMembers)
                {
                    <tr>
                        @if (string.IsNullOrWhiteSpace(item.UserRef))
                        {
                            <td data-label="User Name" id="Name">@item.Name</td>
                        }
                        else
                        {
                            <td data-label="User Name" id="Name">
                                <a href="@string.Format(Model.AccountUri, item.UserRef)">@item.Name</a>
                            </td>
                        }
                        <td data-label="User Email" id="Email">@item.Email</td>
                        <td data-label="User Role" id="Role">@item.Role</td>
                        <td data-label="User Status" id="Status">@item.Status.GetTeamMemberStatus()</td>

                    </tr>
                }
            </tbody>
        </table>
        <br />
        
        @*<a href="@Url.StaffLoginAction($"login/staff?HashedAccountId={Model.Account.HashedAccountId}")" class="button" target="_blank">Change team members or roles</a>*@
        <br />
        <span>(opens in a new window)</span>
    }
    else
    {
        <p>No Team members available</p>
    }
}
else
{
    <p>Account not found</p>
}